{"ast":null,"code":"// @ts-nocheck\nimport * as signalR from '@microsoft/signalr';\nclass Hub {\n  constructor() {\n    this.hub = null;\n    this.connectionToHubAsync = async () => {\n      this.hub = new signalR.HubConnectionBuilder().withUrl('https://localhost:7145/chat', {\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets\n      }).build();\n      this.hub.start();\n    };\n    this.sendCommand = handle => {\n      if (this.hub === null) return;\n      this.hub.on('Send', handle);\n    };\n  }\n}\nexport const serverHub = new Hub();","map":{"version":3,"names":["signalR","Hub","hub","connectionToHubAsync","HubConnectionBuilder","withUrl","skipNegotiation","transport","HttpTransportType","WebSockets","build","start","sendCommand","handle","on","serverHub"],"sources":["C:/Project/ASP.Net/WebShell_2/TaskDNS/ClientApp/src/Server/WebSoket/Hub.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport * as signalR from '@microsoft/signalr'\r\n\r\nclass Hub {\r\n    hub = null;\r\n    connectionToHubAsync = async () =>{\r\n         this.hub = new signalR.HubConnectionBuilder() \r\n            .withUrl('https://localhost:7145/chat', {skipNegotiation: true, transport: signalR.HttpTransportType.WebSockets})\r\n            .build()\r\n\r\n            this.hub.start() \r\n    }\r\n\r\n    sendCommand = (handle) =>{\r\n        if(this.hub === null)\r\n            return\r\n\r\n        this.hub.on('Send', handle)\r\n    }\r\n}\r\n\r\nexport const serverHub = new Hub()"],"mappings":"AAAA;AACA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAE7C,MAAMC,GAAG,CAAC;EAAA;IAAA,KACNC,GAAG,GAAG,IAAI;IAAA,KACVC,oBAAoB,GAAG,YAAW;MAC7B,IAAI,CAACD,GAAG,GAAG,IAAIF,OAAO,CAACI,oBAAoB,EAAE,CACzCC,OAAO,CAAC,6BAA6B,EAAE;QAACC,eAAe,EAAE,IAAI;QAAEC,SAAS,EAAEP,OAAO,CAACQ,iBAAiB,CAACC;MAAU,CAAC,CAAC,CAChHC,KAAK,EAAE;MAER,IAAI,CAACR,GAAG,CAACS,KAAK,EAAE;IACxB,CAAC;IAAA,KAEDC,WAAW,GAAIC,MAAM,IAAI;MACrB,IAAG,IAAI,CAACX,GAAG,KAAK,IAAI,EAChB;MAEJ,IAAI,CAACA,GAAG,CAACY,EAAE,CAAC,MAAM,EAAED,MAAM,CAAC;IAC/B,CAAC;EAAA;AACL;AAEA,OAAO,MAAME,SAAS,GAAG,IAAId,GAAG,EAAE"},"metadata":{},"sourceType":"module"}