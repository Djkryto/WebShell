{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ASP.Net\\\\TestGit\\\\webshell_front\\\\src\\\\Authorization\\\\Component\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { TokenContext } from '../AuthorizationProvider';\nimport React, { useContext, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CookiePanel } from './CookiePanel';\nimport '../../css/auth.css';\nimport 'ts-replace-all';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const passwordValue = useRef(null);\n  const loginValue = useRef(null);\n  const tokenContext = useContext(TokenContext);\n  const authorization = async data => {\n    if (tokenContext.isJWT) await JWTAuthAsync(data);else await CoockieAuthAsync(data);\n  };\n  const JWTAuthAsync = async data => {\n    const token = await getTokenAsync(data);\n    const readyToken = token.replaceAll('\\\"', '');\n    if (readyToken === \"\") return;\n    tokenContext.setToken(token);\n    navigate('/console');\n  };\n  const getTokenAsync = async data => {\n    const urlLogin = 'https://localhost:7145/jwt/login';\n    const responce = await fetch(urlLogin, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    const promise = await responce.text();\n    return promise;\n  };\n  const CoockieAuthAsync = async data => {\n    const urlLogin = 'https://localhost:7145/cookie/login';\n    const responce = await fetch(urlLogin, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    tokenContext.setToken(document.cookie);\n    const promise = await responce.text();\n    if (promise === '0') navigate('/console');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebShell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lineTop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"\\u041B\\u043E\\u0433\\u0438\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: loginValue,\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: passwordValue,\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lineBottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button login\",\n      onClick: () => {\n        var _loginValue$current, _passwordValue$curren;\n        authorization({\n          Id: 0,\n          Login: (_loginValue$current = loginValue.current) === null || _loginValue$current === void 0 ? void 0 : _loginValue$current.value,\n          Password: (_passwordValue$curren = passwordValue.current) === null || _passwordValue$curren === void 0 ? void 0 : _passwordValue$curren.value\n        });\n      },\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button register\",\n      onClick: () => window.location.href = 'http://localhost:3000/register',\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CookiePanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"8CDSpgRW6YdHRRL9MVTL2milOKQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["TokenContext","React","useContext","useRef","useNavigate","CookiePanel","Login","navigate","passwordValue","loginValue","tokenContext","authorization","data","isJWT","JWTAuthAsync","CoockieAuthAsync","token","getTokenAsync","readyToken","replaceAll","setToken","urlLogin","responce","fetch","method","body","JSON","stringify","headers","promise","text","credentials","document","cookie","Id","current","value","Password","window","location","href"],"sources":["C:/Project/ASP.Net/TestGit/webshell_front/src/Authorization/Component/Login.tsx"],"sourcesContent":["import { TokenContext } from '../AuthorizationProvider'\r\nimport React, { useContext, useRef } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { CookiePanel } from './CookiePanel'\r\nimport '../../css/auth.css'\r\nimport 'ts-replace-all'\r\n\r\ntype User = {\r\n    Id:number,\r\n    Login:string | undefined,\r\n    Password:string | undefined\r\n}\r\n\r\nexport const Login = () => {\r\n    const navigate = useNavigate()\r\n    const passwordValue = useRef<HTMLInputElement>(null)\r\n    const loginValue = useRef<HTMLInputElement>(null)\r\n    const tokenContext = useContext(TokenContext)\r\n\r\n    const authorization = async (data : User) : Promise<void> => {\r\n        if(tokenContext.isJWT)\r\n            await JWTAuthAsync(data)\r\n        else \r\n            await CoockieAuthAsync(data)\r\n    }\r\n\r\n    const JWTAuthAsync = async (data : User)=>{\r\n        const token = await getTokenAsync(data)\r\n        const readyToken = token.replaceAll('\\\"','')\r\n\r\n        if(readyToken === \"\")\r\n            return\r\n\r\n        tokenContext.setToken(token)\r\n        navigate('/console')\r\n    }\r\n    \r\n    const getTokenAsync = async (data : User) : Promise<string> => {\r\n        const urlLogin = 'https://localhost:7145/jwt/login'\r\n        const responce = await fetch (urlLogin,{ \r\n            method: 'POST',\r\n            body:  JSON.stringify(data),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n\r\n        const promise = await responce.text()\r\n        \r\n        return promise\r\n    }\r\n\r\n    const CoockieAuthAsync = async (data:User) : Promise<void> => {\r\n        const urlLogin = 'https://localhost:7145/cookie/login'\r\n        const responce = await fetch (urlLogin,{ \r\n            method: 'POST',\r\n            body:  JSON.stringify(data),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials : 'include'\r\n        })\r\n        \r\n        tokenContext.setToken(document.cookie)\r\n\r\n        const promise = await responce.text()\r\n        \r\n        if(promise === '0')\r\n            navigate('/console')\r\n    }\r\n\r\n    return (\r\n        <div className='flex panel'>\r\n            <h1>WebShell</h1>\r\n            <div className='lineTop'/>\r\n            <label>Логин</label>\r\n            <input ref={loginValue} className = 'input' />\r\n            <label>Пароль</label>\r\n            <input ref={passwordValue} className = 'input' />\r\n            <div className='lineBottom'/>\r\n            <button className='button login' onClick={()=>{authorization({Id: 0, Login: loginValue.current?.value,Password: passwordValue.current?.value})}}>Отправить </button>\r\n            <button className='button register'  onClick={() => window.location.href='http://localhost:3000/register'}>Регистрация</button>\r\n            <CookiePanel />\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}