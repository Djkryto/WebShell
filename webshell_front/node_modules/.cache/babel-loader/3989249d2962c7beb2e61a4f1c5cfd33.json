{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ASP.Net\\\\WebShell_2\\\\TaskDNS\\\\ClientApp\\\\src\\\\Input\\\\Input.tsx\",\n  _s = $RefreshSig$();\nimport { allocateSubDirectory, replaceToOneSeparation } from './Function/textProcessing';\nimport React, { useCallback, useReducer, useContext } from 'react';\nimport { DataConsoleContext } from '../Provider/ConsoleDataProvider';\nimport { InputReducer } from './Function/inputReducer';\nimport { ActionKind } from './Enum/ActionKind';\nimport { StatusKey } from './Enum/StatusKey';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet indexCurrentDirectory = 0;\nlet indexCurrentHistory = 0;\nexport const Input = () => {\n  _s();\n  const [inputData, dispatch] = useReducer(InputReducer, {\n    valueInput: '',\n    valueUser: '',\n    currentSubDirectory: ''\n  });\n  const {\n    serverDirectory,\n    outputData,\n    consoleData,\n    sendCommand,\n    stopCommand\n  } = useContext(DataConsoleContext);\n  const eventHandler = e => {\n    checkStopWrite(e);\n    switch (e.key) {\n      case StatusKey.SendCommand:\n        sendCommand(inputData.valueInput);\n        dispatch({\n          type: ActionKind.Clear\n        });\n        break;\n      case StatusKey.SwitchSubDirectory:\n        e.preventDefault();\n        switchSubDirectory();\n        break;\n      case StatusKey.Up:\n        e.preventDefault();\n        callUpCommand();\n        break;\n      case StatusKey.Down:\n        e.preventDefault();\n        callDownCommand();\n        break;\n      case StatusKey.Cancel:\n        stopCommand();\n        break;\n    }\n    return e.key;\n  };\n  const switchSubDirectory = () => {\n    indexCurrentDirectory++;\n    if (indexCurrentDirectory > consoleData.subDirectory.length - 1) indexCurrentDirectory = 0;\n    dispatch({\n      type: ActionKind.ChangeInputValue,\n      valueInput: inputData.valueUser + allocateSubDirectory(consoleData.subDirectory[indexCurrentDirectory], serverDirectory)\n    });\n  };\n  const callDownCommand = () => {\n    indexCurrentHistory++;\n    if (indexCurrentHistory > history.length - 1) indexCurrentHistory = 0;\n    dispatch({\n      type: ActionKind.ChangeInputValue,\n      valueInput: consoleData.history[indexCurrentHistory].textCommand\n    });\n  };\n  const callUpCommand = () => {\n    indexCurrentHistory--;\n    if (indexCurrentHistory < 0) indexCurrentHistory = history.length - 1;\n    dispatch({\n      type: ActionKind.ChangeInputValue,\n      valueInput: consoleData.history[indexCurrentHistory].textCommand\n    });\n  };\n  const checkStopWrite = useCallback(e => {\n    if (e.key === StatusKey.Cancel) return e.key;\n    return outputData.isDisabledWrite ? e.key = '' : e.key;\n  }, [outputData.isDisabledWrite]);\n  const changeHandler = useCallback(e => {\n    if (outputData.isDisabledWrite) return;\n    dispatch({\n      type: ActionKind.ChangeAllData,\n      valueInput: e.currentTarget.value,\n      valueUser: e.currentTarget.value\n    });\n  }, [outputData.isDisabledWrite]);\n  const scrollAuto = e => {\n    e === null || e === void 0 ? void 0 : e.scrollIntoView(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputElement\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: replaceToOneSeparation(serverDirectory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: scrollAuto,\n      value: inputData.valueInput,\n      onKeyDown: eventHandler,\n      onChange: changeHandler,\n      className: \"inputConsole\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 12\n  }, this);\n};\n_s(Input, \"vJqJo4O8XNLcPAdl4Pj2bBemw+Q=\");\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["allocateSubDirectory","replaceToOneSeparation","React","useCallback","useReducer","useContext","DataConsoleContext","InputReducer","ActionKind","StatusKey","indexCurrentDirectory","indexCurrentHistory","Input","inputData","dispatch","valueInput","valueUser","currentSubDirectory","serverDirectory","outputData","consoleData","sendCommand","stopCommand","eventHandler","e","checkStopWrite","key","SendCommand","type","Clear","SwitchSubDirectory","preventDefault","switchSubDirectory","Up","callUpCommand","Down","callDownCommand","Cancel","subDirectory","length","ChangeInputValue","history","textCommand","isDisabledWrite","changeHandler","ChangeAllData","currentTarget","value","scrollAuto","scrollIntoView"],"sources":["C:/Project/ASP.Net/WebShell_2/TaskDNS/ClientApp/src/Input/Input.tsx"],"sourcesContent":["import { allocateSubDirectory,replaceToOneSeparation } from './Function/textProcessing'\r\nimport React,{ KeyboardEvent, FC, Key, FormEvent, useCallback, useReducer, useContext } from 'react'\r\nimport { DataConsoleContext } from '../Provider/ConsoleDataProvider'\r\nimport { InputReducer } from './Function/inputReducer'\r\nimport { ActionKind } from './Enum/ActionKind'\r\nimport { StatusKey } from './Enum/StatusKey'\r\n\r\nlet indexCurrentDirectory = 0\r\nlet indexCurrentHistory = 0\r\n\r\nexport const Input : FC = () => {\r\n    const [inputData,dispatch] = useReducer(InputReducer,{valueInput: '', valueUser:'', currentSubDirectory: ''})\r\n    const { serverDirectory, outputData, consoleData, sendCommand, stopCommand } = useContext(DataConsoleContext)\r\n\r\n    const eventHandler = (e: KeyboardEvent): Key => {\r\n        checkStopWrite(e)\r\n\r\n        switch (e.key) {\r\n            case StatusKey.SendCommand:\r\n                sendCommand(inputData.valueInput)\r\n                dispatch({type: ActionKind.Clear})\r\n                break\r\n\r\n            case StatusKey.SwitchSubDirectory:\r\n                e.preventDefault()\r\n                switchSubDirectory()\r\n                break\r\n\r\n            case StatusKey.Up:\r\n                e.preventDefault()\r\n                callUpCommand()\r\n                break\r\n\r\n            case StatusKey.Down:\r\n                e.preventDefault()\r\n                callDownCommand()\r\n                break\r\n\r\n            case StatusKey.Cancel:\r\n                stopCommand()\r\n                break\r\n        }\r\n        \r\n        return e.key\r\n    }\r\n\r\n    const switchSubDirectory = () : void => {\r\n        indexCurrentDirectory++\r\n        if (indexCurrentDirectory > consoleData.subDirectory.length - 1) \r\n            indexCurrentDirectory = 0\r\n        \r\n        dispatch({ type: ActionKind.ChangeInputValue, valueInput: (inputData.valueUser + allocateSubDirectory(consoleData.subDirectory[indexCurrentDirectory],serverDirectory))})\r\n    }\r\n\r\n    const callDownCommand = () : void => {\r\n        indexCurrentHistory++\r\n        if (indexCurrentHistory > history.length - 1) \r\n            indexCurrentHistory = 0\r\n        \r\n        dispatch({ type: ActionKind.ChangeInputValue, valueInput: consoleData.history[indexCurrentHistory].textCommand})\r\n    }\r\n\r\n    const callUpCommand = () : void => {\r\n        indexCurrentHistory--;\r\n        if (indexCurrentHistory < 0) \r\n            indexCurrentHistory =  history.length - 1;\r\n        \r\n        dispatch({ type: ActionKind.ChangeInputValue, valueInput: consoleData.history[indexCurrentHistory].textCommand})\r\n    }\r\n    \r\n    const checkStopWrite = useCallback((e: KeyboardEvent) : string => {\r\n        if(e.key === StatusKey.Cancel)\r\n            return e.key\r\n        \r\n        return outputData.isDisabledWrite ? e.key = '' : e.key\r\n    },[outputData.isDisabledWrite])\r\n\r\n    const changeHandler = useCallback((e : FormEvent<HTMLInputElement>) : void => {\r\n        if(outputData.isDisabledWrite)\r\n            return;\r\n\r\n        dispatch({ type: ActionKind.ChangeAllData, valueInput: e.currentTarget.value,valueUser:e.currentTarget.value })\r\n    },[outputData.isDisabledWrite])\r\n    \r\n    const scrollAuto = (e : HTMLInputElement) : void => {\r\n        e?.scrollIntoView(false)\r\n    }\r\n\r\n    return <div className='inputElement'>\r\n                <div>{replaceToOneSeparation(serverDirectory)}</div>\r\n                <input ref ={scrollAuto} value = {inputData.valueInput} onKeyDown = {eventHandler} onChange = {changeHandler} className='inputConsole'/>\r\n            </div> \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}