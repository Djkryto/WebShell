{"ast":null,"code":"// @ts-nocheck\n\nimport * as signalR from '@microsoft/signalr';\nclass CustomHttpClient extends signalR.DefaultHttpClient {\n  constructor(token) {\n    this.token = token;\n  }\n  send(request) {\n    request.headers = {\n      ...request.headers,\n      \"cookie\": token\n    };\n    return super.send(request);\n  }\n}\n\n/*\r\n* Класс для получения данных с Hub.\r\n*/\nclass Hub {\n  constructor() {\n    this.hub = void 0;\n    this.connectionToHubAsync = async (isJWT, token) => {\n      this.InitHub(isJWT, token);\n      this.hub.start();\n    };\n    this.InitHub = (isJWT, token) => {\n      if (isJWT) {\n        this.hub = new signalR.HubConnectionBuilder().withUrl('https://localhost:7145/chat', {\n          accessTokenFactory: () => token,\n          skipNegotiation: true,\n          transport: signalR.HttpTransportType.WebSockets\n        }).build();\n      } else {\n        this.hub = new signalR.HubConnectionBuilder().withUrl('https://localhost:7145/chat', {\n          httpClient: new CustomHttpClient(token),\n          skipNegotiation: true,\n          transport: signalR.HttpTransportType.WebSockets\n        }).build();\n      }\n    };\n    this.getDataFromHub = handle => {\n      if (this.hub === null) return;\n      this.hub.on('Send', handle);\n    };\n    this.sendCommand = command => this.hub.invoke('AddCommand', command);\n    this.stopProcessingCommand = () => this.hub.invoke('Stop');\n    this.getConsoleData = () => this.hub.invoke('GetConsoleData');\n  }\n}\nexport const serverHub = new Hub();","map":{"version":3,"names":["signalR","CustomHttpClient","DefaultHttpClient","constructor","token","send","request","headers","Hub","hub","connectionToHubAsync","isJWT","InitHub","start","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","build","httpClient","getDataFromHub","handle","on","sendCommand","command","invoke","stopProcessingCommand","getConsoleData","serverHub"],"sources":["C:/Project/ASP.Net/TestGit/webshell_front/src/Server/WebSoket/Hub.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport { IHistory } from '../../Console/Input/Interface/IHistory'\r\nimport { IDataHub } from '../../Console/Output/Interface/IDataHub'\r\nimport * as signalR from '@microsoft/signalr'\r\nimport { IConsoleData } from '../../Console/Output/Interface/IConsoleData'\r\n\r\n/*\r\n * Обработчик для данных Hub\r\n */\r\ninterface Handler {\r\n    (data : IDataHub): void\r\n}\r\n\r\nclass CustomHttpClient extends signalR.DefaultHttpClient {\r\n    token = ''\r\n    constructor(token : string){\r\n        this.token = token\r\n    }\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n      request.headers = { ...request.headers, \"cookie\": token };\r\n      return super.send(request);\r\n    }\r\n}\r\n  \r\n/*\r\n* Класс для получения данных с Hub.\r\n*/\r\nclass Hub {\r\n    hub \r\n   /*\r\n    * Функция подключения и запуска signalR.\r\n    */\r\n    connectionToHubAsync = async (isJWT:bool,token : string) =>{\r\n        this.InitHub(isJWT,token)\r\n        this.hub.start()\r\n    }\r\n    /*\r\n    * Функция для получения данных с Hub.\r\n    * @param isJWT выбор поставщика токена.\r\n    * @param token токен доступа.\r\n    */\r\n    InitHub = (isJWT: boolean, token : string) => { \r\n        if(isJWT){\r\n            this.hub = new signalR.HubConnectionBuilder() \r\n            .withUrl('https://localhost:7145/chat', {accessTokenFactory: () => token, skipNegotiation: true, transport: signalR.HttpTransportType.WebSockets})\r\n            .build()\r\n        }\r\n        else{\r\n            this.hub = new signalR.HubConnectionBuilder() \r\n            .withUrl('https://localhost:7145/chat', {httpClient: new CustomHttpClient(token), skipNegotiation: true, transport: signalR.HttpTransportType.WebSockets})\r\n            .build()\r\n        }\r\n    }\r\n\r\n   /*\r\n    * Функция для получения данных с Hub.\r\n    * @param handle обработчик данных с hub.\r\n    */\r\n    getDataFromHub = (handle : Handler) =>{\r\n        if(this.hub === null)\r\n            return\r\n\r\n        this.hub.on('Send', handle)\r\n    }\r\n    \r\n   /*\r\n    * Функция для отправки комманды на сервер.\r\n    * @param command команда пользователя.\r\n    */\r\n    sendCommand = (command : string) : Promise<void> => this.hub.invoke('AddCommand',command)\r\n   /*\r\n    * Функция останавливающая выполняюмую команду на сервере ранее введенная пользователем.\r\n    */\r\n    stopProcessingCommand = () : Promise<void> => this.hub.invoke('Stop')\r\n   /*\r\n    * Функция получающая от сервера текущую директорию\r\n    */\r\n    getConsoleData = () : Promise<IConsoleData> => this.hub.invoke('GetConsoleData')\r\n}\r\nexport const serverHub = new Hub()"],"mappings":"AAAA;;AAGA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAU7C,MAAMC,gBAAgB,SAASD,OAAO,CAACE,iBAAiB,CAAC;EAErDC,WAAW,CAACC,KAAc,EAAC;IACvB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EACOC,IAAI,CAACC,OAAoB,EAAyB;IACvDA,OAAO,CAACC,OAAO,GAAG;MAAE,GAAGD,OAAO,CAACC,OAAO;MAAE,QAAQ,EAAEH;IAAM,CAAC;IACzD,OAAO,KAAK,CAACC,IAAI,CAACC,OAAO,CAAC;EAC5B;AACJ;;AAEA;AACA;AACA;AACA,MAAME,GAAG,CAAC;EAAA;IAAA,KACNC,GAAG;IAAA,KAIHC,oBAAoB,GAAG,OAAOC,KAAU,EAACP,KAAc,KAAI;MACvD,IAAI,CAACQ,OAAO,CAACD,KAAK,EAACP,KAAK,CAAC;MACzB,IAAI,CAACK,GAAG,CAACI,KAAK,EAAE;IACpB,CAAC;IAAA,KAMDD,OAAO,GAAG,CAACD,KAAc,EAAEP,KAAc,KAAK;MAC1C,IAAGO,KAAK,EAAC;QACL,IAAI,CAACF,GAAG,GAAG,IAAIT,OAAO,CAACc,oBAAoB,EAAE,CAC5CC,OAAO,CAAC,6BAA6B,EAAE;UAACC,kBAAkB,EAAE,MAAMZ,KAAK;UAAEa,eAAe,EAAE,IAAI;UAAEC,SAAS,EAAElB,OAAO,CAACmB,iBAAiB,CAACC;QAAU,CAAC,CAAC,CACjJC,KAAK,EAAE;MACZ,CAAC,MACG;QACA,IAAI,CAACZ,GAAG,GAAG,IAAIT,OAAO,CAACc,oBAAoB,EAAE,CAC5CC,OAAO,CAAC,6BAA6B,EAAE;UAACO,UAAU,EAAE,IAAIrB,gBAAgB,CAACG,KAAK,CAAC;UAAEa,eAAe,EAAE,IAAI;UAAEC,SAAS,EAAElB,OAAO,CAACmB,iBAAiB,CAACC;QAAU,CAAC,CAAC,CACzJC,KAAK,EAAE;MACZ;IACJ,CAAC;IAAA,KAMDE,cAAc,GAAIC,MAAgB,IAAI;MAClC,IAAG,IAAI,CAACf,GAAG,KAAK,IAAI,EAChB;MAEJ,IAAI,CAACA,GAAG,CAACgB,EAAE,CAAC,MAAM,EAAED,MAAM,CAAC;IAC/B,CAAC;IAAA,KAMDE,WAAW,GAAIC,OAAgB,IAAqB,IAAI,CAAClB,GAAG,CAACmB,MAAM,CAAC,YAAY,EAACD,OAAO,CAAC;IAAA,KAIzFE,qBAAqB,GAAG,MAAsB,IAAI,CAACpB,GAAG,CAACmB,MAAM,CAAC,MAAM,CAAC;IAAA,KAIrEE,cAAc,GAAG,MAA8B,IAAI,CAACrB,GAAG,CAACmB,MAAM,CAAC,gBAAgB,CAAC;EAAA;AACpF;AACA,OAAO,MAAMG,SAAS,GAAG,IAAIvB,GAAG,EAAE"},"metadata":{},"sourceType":"module"}