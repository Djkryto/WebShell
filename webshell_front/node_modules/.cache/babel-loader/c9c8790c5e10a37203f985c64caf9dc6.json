{"ast":null,"code":"// @ts-nocheck\n\nimport * as signalR from '@microsoft/signalr';\n/*\r\n* Класс для получения данных с Hub.\r\n*/\nclass Hub {\n  constructor() {\n    this.hub = void 0;\n    this.connectionToHubAsync = async (isJWT, token) => {\n      if (isJWT) {\n        this.hub = new signalR.HubConnectionBuilder().withUrl('https://localhost:7145/chat', {\n          accessTokenFactory: () => token,\n          skipNegotiation: true,\n          transport: signalR.HttpTransportType.WebSockets\n        }).build();\n      } else {\n        const config = {\n          withCredentials: true,\n          skipNegotiation: true,\n          transport: signalR.HttpTransportType.WebSockets\n        };\n        this.hub = new signalR.HubConnectionBuilder().withUrl('https://localhost:7145/chat', config).build();\n      }\n      await this.hub.start();\n    };\n    this.getDataFromHub = handle => {\n      if (this.hub === null) return;\n      this.hub.on('Send', handle);\n    };\n    this.sendCommand = command => this.hub.invoke('AddCommand', command);\n    this.stopProcessingCommand = () => this.hub.invoke('Stop');\n    this.getConsoleData = () => this.hub.invoke('GetConsoleData');\n  }\n}\nexport const serverHub = new Hub();","map":{"version":3,"names":["signalR","Hub","hub","connectionToHubAsync","isJWT","token","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","build","config","withCredentials","start","getDataFromHub","handle","on","sendCommand","command","invoke","stopProcessingCommand","getConsoleData","serverHub"],"sources":["C:/Project/ASP.Net/TestGit/webshell_front/src/Server/WebSoket/Hub.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport { IHistory } from '../../Console/Input/Interface/IHistory'\r\nimport { IDataHub } from '../../Console/Output/Interface/IDataHub'\r\nimport * as signalR from '@microsoft/signalr'\r\nimport { IConsoleData } from '../../Console/Output/Interface/IConsoleData'\r\n\r\n/*\r\n * Обработчик для данных Hub\r\n */\r\ninterface Handler {\r\n    (data : IDataHub): void\r\n}\r\n\r\n/*\r\n* Класс для получения данных с Hub.\r\n*/\r\nclass Hub {\r\n    hub: signalR.HubConnection\r\n    /*\r\n    * Функция для получения данных с Hub.\r\n    * @param isJWT выбор поставщика токена.\r\n    * @param token токен доступа.\r\n    */\r\n    connectionToHubAsync = async (isJWT: boolean, token : string) => { \r\n        if(isJWT){\r\n            this.hub = new signalR.HubConnectionBuilder() \r\n            .withUrl('https://localhost:7145/chat', {accessTokenFactory: () => token, skipNegotiation: true, transport: signalR.HttpTransportType.WebSockets})\r\n            .build()\r\n        }\r\n        else{\r\n            const config: IHttpConnectionOptions = {\r\n                withCredentials: true,\r\n                skipNegotiation: true, \r\n                transport: signalR.HttpTransportType.WebSockets,\r\n            }\r\n            this.hub = new signalR.HubConnectionBuilder() \r\n                .withUrl('https://localhost:7145/chat', config)\r\n                .build()\r\n        }\r\n        await this.hub.start()\r\n    }\r\n\r\n   /*\r\n    * Функция для получения данных с Hub.\r\n    * @param handle обработчик данных с hub.\r\n    */\r\n    getDataFromHub = (handle : Handler) =>{\r\n        if(this.hub === null)\r\n            return\r\n\r\n        this.hub.on('Send', handle)\r\n    }\r\n    \r\n   /*\r\n    * Функция для отправки комманды на сервер.\r\n    * @param command команда пользователя.\r\n    */\r\n    sendCommand = (command : string) : Promise<void> => this.hub.invoke('AddCommand',command)\r\n   /*\r\n    * Функция останавливающая выполняюмую команду на сервере ранее введенная пользователем.\r\n    */\r\n    stopProcessingCommand = () : Promise<void> => this.hub.invoke('Stop')\r\n   /*\r\n    * Функция получающая от сервера текущую директорию\r\n    */\r\n    getConsoleData = () : Promise<IConsoleData> => this.hub.invoke('GetConsoleData')\r\n}\r\nexport const serverHub = new Hub()"],"mappings":"AAAA;;AAGA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAU7C;AACA;AACA;AACA,MAAMC,GAAG,CAAC;EAAA;IAAA,KACNC,GAAG;IAAA,KAMHC,oBAAoB,GAAG,OAAOC,KAAc,EAAEC,KAAc,KAAK;MAC7D,IAAGD,KAAK,EAAC;QACL,IAAI,CAACF,GAAG,GAAG,IAAIF,OAAO,CAACM,oBAAoB,EAAE,CAC5CC,OAAO,CAAC,6BAA6B,EAAE;UAACC,kBAAkB,EAAE,MAAMH,KAAK;UAAEI,eAAe,EAAE,IAAI;UAAEC,SAAS,EAAEV,OAAO,CAACW,iBAAiB,CAACC;QAAU,CAAC,CAAC,CACjJC,KAAK,EAAE;MACZ,CAAC,MACG;QACA,MAAMC,MAA8B,GAAG;UACnCC,eAAe,EAAE,IAAI;UACrBN,eAAe,EAAE,IAAI;UACrBC,SAAS,EAAEV,OAAO,CAACW,iBAAiB,CAACC;QACzC,CAAC;QACD,IAAI,CAACV,GAAG,GAAG,IAAIF,OAAO,CAACM,oBAAoB,EAAE,CACxCC,OAAO,CAAC,6BAA6B,EAAEO,MAAM,CAAC,CAC9CD,KAAK,EAAE;MAChB;MACA,MAAM,IAAI,CAACX,GAAG,CAACc,KAAK,EAAE;IAC1B,CAAC;IAAA,KAMDC,cAAc,GAAIC,MAAgB,IAAI;MAClC,IAAG,IAAI,CAAChB,GAAG,KAAK,IAAI,EAChB;MAEJ,IAAI,CAACA,GAAG,CAACiB,EAAE,CAAC,MAAM,EAAED,MAAM,CAAC;IAC/B,CAAC;IAAA,KAMDE,WAAW,GAAIC,OAAgB,IAAqB,IAAI,CAACnB,GAAG,CAACoB,MAAM,CAAC,YAAY,EAACD,OAAO,CAAC;IAAA,KAIzFE,qBAAqB,GAAG,MAAsB,IAAI,CAACrB,GAAG,CAACoB,MAAM,CAAC,MAAM,CAAC;IAAA,KAIrEE,cAAc,GAAG,MAA8B,IAAI,CAACtB,GAAG,CAACoB,MAAM,CAAC,gBAAgB,CAAC;EAAA;AACpF;AACA,OAAO,MAAMG,SAAS,GAAG,IAAIxB,GAAG,EAAE"},"metadata":{},"sourceType":"module"}