{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ASP.Net\\\\WebShell_2\\\\TaskDNS\\\\ClientApp\\\\src\\\\Page\\\\Console.tsx\",\n  _s2 = $RefreshSig$();\n// @ts-nocheck\nimport { useCallback, useEffect, useReducer, useState } from 'react';\nimport { dataServer } from '../Server/Command/Repository';\nimport { serverHub } from '../Server/WebSoket/Hub';\nimport { Output } from '../Output/Output';\nimport { Input } from '../Input/Input';\nimport '../css/console.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConsoleReducer = (state, action) => {\n  switch (action.type) {\n    case 'changeAllValue':\n      return {\n        directory: action.data.directory,\n        history: action.data.history,\n        subDirectory: action.data.subDirectory\n      };\n    default:\n      throw new Error();\n  }\n};\n_c = ConsoleReducer;\nexport const Console = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [output, setOutput] = useState([]);\n  const [isDisabledWrite, setIsDisabledWrite] = useState(false);\n  const [consoleData, dispatch] = useReducer(ConsoleReducer, {\n    directory: '',\n    history: [],\n    subDirectory: []\n  });\n  _s(useEffect(_s(() => {\n    _s();\n    const connectionToServer = useCallback(async () => {\n      serverHub.connectionToHubAsync();\n      serverHub.sendCommand(getOutputHub);\n      await getConsoleDataAsync();\n    }, []);\n    connectionToServer();\n  }, \"OOLSGhs7cpHGRuallJxYIqeEdt0=\"), []), \"OOLSGhs7cpHGRuallJxYIqeEdt0=\");\n  const sendCommand = useCallback(async text => {\n    await dataServer.postCommandAsync(text.trim());\n    await getConsoleDataAsync();\n  }, []);\n  const stopCommand = useCallback(async () => {\n    await dataServer.stopCommandAsync();\n  }, []);\n  const getOutputHub = useCallback(dataHub => {\n    const line = dataHub.output;\n    const status = dataHub.status;\n    if (line !== '') {\n      setIsDisabledWrite(status === 0 ? true : false);\n      setOutput(output => [...output, {\n        status,\n        line\n      }]);\n    }\n  }, [setOutput, setIsDisabledWrite]);\n  const getConsoleDataAsync = useCallback(async () => {\n    const currnetDirectory = await dataServer.currnetDirectoryAsync();\n    const subDirectory = await dataServer.subDirectoriesAsync();\n    const history = await dataServer.getHistoryAsync();\n    const directory = currnetDirectory.replaceAll('\\\"', '');\n    dispatch({\n      type: 'changeAllValue',\n      data: {\n        directory,\n        subDirectory,\n        history\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console\",\n    children: [/*#__PURE__*/_jsxDEV(Output, {\n      output: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      isDisabledWrite: isDisabledWrite,\n      sendCommand: sendCommand,\n      stopCommand: stopCommand,\n      serverDirectory: consoleData.directory,\n      subDirectory: consoleData.subDirectory,\n      history: consoleData.history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s2(Console, \"f2bfRt/cbf3yHX+fu2T+0miVGo0=\");\n_c2 = Console;\nvar _c, _c2;\n$RefreshReg$(_c, \"ConsoleReducer\");\n$RefreshReg$(_c2, \"Console\");","map":{"version":3,"names":["useCallback","useEffect","useReducer","useState","dataServer","serverHub","Output","Input","ConsoleReducer","state","action","type","directory","data","history","subDirectory","Error","Console","output","setOutput","isDisabledWrite","setIsDisabledWrite","consoleData","dispatch","connectionToServer","connectionToHubAsync","sendCommand","getOutputHub","getConsoleDataAsync","text","postCommandAsync","trim","stopCommand","stopCommandAsync","dataHub","line","status","currnetDirectory","currnetDirectoryAsync","subDirectoriesAsync","getHistoryAsync","replaceAll"],"sources":["C:/Project/ASP.Net/WebShell_2/TaskDNS/ClientApp/src/Page/Console.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport { useCallback, useEffect, useReducer, useState } from 'react'\r\nimport { IConsoleData } from '../Output/Interface/IConsoleData'\r\nimport { IWriteOutput} from '../Output/Interface/IWriteOutput'\r\nimport { dataServer } from '../Server/Command/Repository'\r\nimport { serverHub } from '../Server/WebSoket/Hub'\r\nimport { Action } from '../Output/Type/Action'\r\nimport { Output } from '../Output/Output'\r\nimport { Input } from '../Input/Input'\r\nimport '../css/console.css'\r\n\r\nconst ConsoleReducer = (state : IConsoleData, action: Action) : IConsoleData => {\r\n    switch (action.type) {\r\n      case 'changeAllValue':\r\n        return {directory: action.data.directory, history: action.data.history, subDirectory: action.data.subDirectory}\r\n      default:\r\n        throw new Error();\r\n    }\r\n}   \r\n\r\nexport const Console : FC = () =>{\r\n    const [output, setOutput] = useState<IWriteOutput>([])\r\n    const [isDisabledWrite, setIsDisabledWrite] = useState(false)\r\n    const [consoleData, dispatch] = useReducer(ConsoleReducer,{ directory: '', history: [], subDirectory: [] })\r\n    \r\n    useEffect(() => {\r\n        const connectionToServer = useCallback(async () : Promise<void> =>{\r\n            serverHub.connectionToHubAsync()\r\n            serverHub.sendCommand(getOutputHub)\r\n            await getConsoleDataAsync()\r\n        },[])\r\n        \r\n        connectionToServer()\r\n    }, []) \r\n\r\n    const sendCommand = useCallback(async (text : string): Promise<void> => {\r\n        await dataServer.postCommandAsync(text.trim())\r\n        await getConsoleDataAsync()\r\n    },[])\r\n\r\n    const stopCommand = useCallback(async () : Promise<void> => {\r\n        await dataServer.stopCommandAsync()\r\n    },[])\r\n\r\n    const getOutputHub = useCallback((dataHub) : void => {\r\n        const line = dataHub.output as string\r\n        const status = dataHub.status as number\r\n        \r\n        if(line !== ''){\r\n            setIsDisabledWrite(status === 0? true : false)\r\n            setOutput((output) => [...output,{status ,line}])\r\n        }\r\n    }, [setOutput, setIsDisabledWrite])\r\n\r\n    const getConsoleDataAsync = useCallback(async () : Promise<void> => {\r\n        const currnetDirectory = await dataServer.currnetDirectoryAsync()\r\n        const subDirectory = await dataServer.subDirectoriesAsync()\r\n        const history = await dataServer.getHistoryAsync()\r\n\r\n        const directory = currnetDirectory.replaceAll('\\\"','')\r\n\r\n        dispatch({type: 'changeAllValue', data: {directory, subDirectory, history}})\r\n    }, [])\r\n\r\n    return(\r\n    <div className='console'>\r\n        <Output output = {output}/>\r\n        <Input \r\n            isDisabledWrite={isDisabledWrite} \r\n            sendCommand = {sendCommand}\r\n            stopCommand = {stopCommand}\r\n            serverDirectory={consoleData.directory}  \r\n            subDirectory={consoleData.subDirectory}\r\n            history = {consoleData.history}\r\n        />\r\n    </div>\r\n    )\r\n}"],"mappings":";;AAAA;AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAGpE,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,SAAS,QAAQ,wBAAwB;AAElD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,oBAAoB;AAAA;AAE3B,MAAMC,cAAc,GAAG,CAACC,KAAoB,EAAEC,MAAc,KAAoB;EAC5E,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,gBAAgB;MACnB,OAAO;QAACC,SAAS,EAAEF,MAAM,CAACG,IAAI,CAACD,SAAS;QAAEE,OAAO,EAAEJ,MAAM,CAACG,IAAI,CAACC,OAAO;QAAEC,YAAY,EAAEL,MAAM,CAACG,IAAI,CAACE;MAAY,CAAC;IACjH;MACE,MAAM,IAAIC,KAAK,EAAE;EAAC;AAE1B,CAAC;AAAA,KAPKR,cAAc;AASpB,OAAO,MAAMS,OAAY,GAAG,MAAK;EAAA;EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAe,EAAE,CAAC;EACtD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACmB,WAAW,EAAEC,QAAQ,CAAC,GAAGrB,UAAU,CAACM,cAAc,EAAC;IAAEI,SAAS,EAAE,EAAE;IAAEE,OAAO,EAAE,EAAE;IAAEC,YAAY,EAAE;EAAG,CAAC,CAAC;EAE3G,GAAAd,SAAS,IAAC,MAAM;IAAA;IACZ,MAAMuB,kBAAkB,GAAGxB,WAAW,CAAC,YAA2B;MAC9DK,SAAS,CAACoB,oBAAoB,EAAE;MAChCpB,SAAS,CAACqB,WAAW,CAACC,YAAY,CAAC;MACnC,MAAMC,mBAAmB,EAAE;IAC/B,CAAC,EAAC,EAAE,CAAC;IAELJ,kBAAkB,EAAE;EACxB,CAAC,mCAAE,EAAE,CAAC;EAEN,MAAME,WAAW,GAAG1B,WAAW,CAAC,MAAO6B,IAAa,IAAoB;IACpE,MAAMzB,UAAU,CAAC0B,gBAAgB,CAACD,IAAI,CAACE,IAAI,EAAE,CAAC;IAC9C,MAAMH,mBAAmB,EAAE;EAC/B,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMI,WAAW,GAAGhC,WAAW,CAAC,YAA4B;IACxD,MAAMI,UAAU,CAAC6B,gBAAgB,EAAE;EACvC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMN,YAAY,GAAG3B,WAAW,CAAEkC,OAAO,IAAY;IACjD,MAAMC,IAAI,GAAGD,OAAO,CAAChB,MAAgB;IACrC,MAAMkB,MAAM,GAAGF,OAAO,CAACE,MAAgB;IAEvC,IAAGD,IAAI,KAAK,EAAE,EAAC;MACXd,kBAAkB,CAACe,MAAM,KAAK,CAAC,GAAE,IAAI,GAAG,KAAK,CAAC;MAC9CjB,SAAS,CAAED,MAAM,IAAK,CAAC,GAAGA,MAAM,EAAC;QAACkB,MAAM;QAAED;MAAI,CAAC,CAAC,CAAC;IACrD;EACJ,CAAC,EAAE,CAAChB,SAAS,EAAEE,kBAAkB,CAAC,CAAC;EAEnC,MAAMO,mBAAmB,GAAG5B,WAAW,CAAC,YAA4B;IAChE,MAAMqC,gBAAgB,GAAG,MAAMjC,UAAU,CAACkC,qBAAqB,EAAE;IACjE,MAAMvB,YAAY,GAAG,MAAMX,UAAU,CAACmC,mBAAmB,EAAE;IAC3D,MAAMzB,OAAO,GAAG,MAAMV,UAAU,CAACoC,eAAe,EAAE;IAElD,MAAM5B,SAAS,GAAGyB,gBAAgB,CAACI,UAAU,CAAC,IAAI,EAAC,EAAE,CAAC;IAEtDlB,QAAQ,CAAC;MAACZ,IAAI,EAAE,gBAAgB;MAAEE,IAAI,EAAE;QAACD,SAAS;QAAEG,YAAY;QAAED;MAAO;IAAC,CAAC,CAAC;EAChF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACA;IAAK,SAAS,EAAC,SAAS;IAAA,wBACpB,QAAC,MAAM;MAAC,MAAM,EAAII;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eAC3B,QAAC,KAAK;MACF,eAAe,EAAEE,eAAgB;MACjC,WAAW,EAAIM,WAAY;MAC3B,WAAW,EAAIM,WAAY;MAC3B,eAAe,EAAEV,WAAW,CAACV,SAAU;MACvC,YAAY,EAAEU,WAAW,CAACP,YAAa;MACvC,OAAO,EAAIO,WAAW,CAACR;IAAQ;MAAA;MAAA;MAAA;IAAA,QACjC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEV,CAAC;AAAA,IAzDYG,OAAY;AAAA,MAAZA,OAAY;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}