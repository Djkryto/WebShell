{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ASP.Net\\\\WebShell_2\\\\TaskDNS\\\\ClientApp\\\\src\\\\Input\\\\Input.tsx\",\n  _s = $RefreshSig$();\nimport { allocateSubDirectory, replaceToOneSeparation } from './textProcessing';\nimport { useState, useCallback, useReducer } from 'react';\nimport { StatusKey } from './Enum/StatusKey';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet indexCurrentDirectory = 0;\nlet indexCurrentHistory = 0;\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'changeAllValue':\n      return {\n        valueUser: action.data.valueUser,\n        valueInput: action.data.valueInput,\n        currentSubDirectory: action.data.currentSubDirectory\n      };\n    default:\n      throw new Error();\n  }\n};\nexport const Input = _ref => {\n  _s();\n  let {\n    isDisabledWrite,\n    sendCommand,\n    stopCommand,\n    serverDirectory,\n    subDirectory,\n    history\n  } = _ref;\n  const [valueUser, setValueUser] = useState('');\n  const [valueInput, setValueInput] = useState('');\n  const [currentSubDirectory, setCurrentSubDirectory] = useState('');\n  const [inputData, dispath] = useReducer(reducer, {\n    valueUser: '',\n    valueInput: '',\n    currentSubDirectory: ''\n  });\n  const eventHandler = e => {\n    checkStopWrite(e);\n    switch (e.key) {\n      case StatusKey.SendCommand:\n        sendCommand(valueInput);\n        setValueInput('');\n        setValueUser('');\n        break;\n      case StatusKey.SwitchSubDirectory:\n        e.preventDefault();\n        switchSubDirectory();\n        break;\n      case StatusKey.Up:\n        e.preventDefault();\n        callUpCommand();\n        break;\n      case StatusKey.Down:\n        e.preventDefault();\n        callDownCommand();\n        break;\n      case StatusKey.Cancel:\n        stopCommand();\n        break;\n    }\n    return e.key;\n  };\n  const switchSubDirectory = () => {\n    indexCurrentDirectory++;\n    if (indexCurrentDirectory > subDirectory.length - 1) indexCurrentDirectory = 0;\n    setCurrentSubDirectory(allocateSubDirectory(subDirectory[indexCurrentDirectory], serverDirectory));\n    setValueInput(valueUser + currentSubDirectory);\n  };\n  const callDownCommand = () => {\n    indexCurrentHistory++;\n    if (indexCurrentHistory > history.length - 1) indexCurrentHistory = 0;\n    setValueInput(history[indexCurrentHistory].textCommand);\n  };\n  const callUpCommand = () => {\n    indexCurrentHistory--;\n    if (indexCurrentHistory < 0) indexCurrentHistory = history.length - 1;\n    setValueInput(history[indexCurrentHistory].textCommand);\n  };\n  const checkStopWrite = useCallback(e => {\n    if (e.key === StatusKey.Cancel) return e.key;\n    return isDisabledWrite ? e.key = '' : e.key;\n  }, []);\n  const changeHandler = e => {\n    if (isDisabledWrite) return;\n    setValueUser(e.currentTarget.value);\n    setValueInput(e.currentTarget.value);\n  };\n  const scrollAuto = e => {\n    e === null || e === void 0 ? void 0 : e.scrollIntoView(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputElement\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: replaceToOneSeparation(serverDirectory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: scrollAuto,\n      value: valueInput,\n      onKeyDown: eventHandler,\n      onChange: changeHandler,\n      className: \"inputConsole\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 12\n  }, this);\n};\n_s(Input, \"b/Tf2e5gUZuAN/os+yANKp4ck+o=\");\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["allocateSubDirectory","replaceToOneSeparation","useState","useCallback","useReducer","StatusKey","React","indexCurrentDirectory","indexCurrentHistory","reducer","state","action","type","valueUser","data","valueInput","currentSubDirectory","Error","Input","isDisabledWrite","sendCommand","stopCommand","serverDirectory","subDirectory","history","setValueUser","setValueInput","setCurrentSubDirectory","inputData","dispath","eventHandler","e","checkStopWrite","key","SendCommand","SwitchSubDirectory","preventDefault","switchSubDirectory","Up","callUpCommand","Down","callDownCommand","Cancel","length","textCommand","changeHandler","currentTarget","value","scrollAuto","scrollIntoView"],"sources":["C:/Project/ASP.Net/WebShell_2/TaskDNS/ClientApp/src/Input/Input.tsx"],"sourcesContent":["import { allocateSubDirectory,replaceToOneSeparation } from './textProcessing'\r\nimport { KeyboardEvent, FC, Key, FormEvent, useState, useEffect, useRef, useCallback, useReducer } from 'react'\r\nimport { StatusKey } from './Enum/StatusKey'\r\nimport { IInput } from './Interface/IInput'\r\nimport React from 'react'\r\n\r\nlet indexCurrentDirectory = 0\r\nlet indexCurrentHistory = 0\r\n\r\ninterface IInputData{\r\n    valueUser: string,\r\n    valueInput: string,\r\n    currentSubDirectory: string\r\n}\r\ntype Action = { type: 'changeAllValue', data: IInputData,}\r\n\r\nconst reducer = (state : IInputData ,action :Action) => {\r\n    switch (action.type) {\r\n        case 'changeAllValue':\r\n            return {valueUser: action.data.valueUser, valueInput: action.data.valueInput, currentSubDirectory: action.data.currentSubDirectory}\r\n        default:\r\n          throw new Error();\r\n      }\r\n}\r\n\r\nexport const Input : FC<IInput> =  ({ isDisabledWrite, sendCommand, stopCommand, serverDirectory ,subDirectory,history})  => {\r\n    const [valueUser,setValueUser] = useState('')\r\n    const [valueInput,setValueInput] = useState('')\r\n    const [currentSubDirectory,setCurrentSubDirectory] = useState('')\r\n    const [inputData,dispath] = useReducer<IInputData>(reducer,{\r\n        valueUser: '',\r\n        valueInput: '',\r\n        currentSubDirectory: ''\r\n    })\r\n\r\n    const eventHandler = (e: KeyboardEvent): Key => {\r\n        checkStopWrite(e)\r\n\r\n        switch (e.key) {\r\n            case StatusKey.SendCommand:\r\n                sendCommand(valueInput)\r\n                setValueInput('')\r\n                setValueUser('')\r\n                break\r\n\r\n            case StatusKey.SwitchSubDirectory:\r\n                e.preventDefault()\r\n                switchSubDirectory()\r\n                break\r\n\r\n            case StatusKey.Up:\r\n                e.preventDefault()\r\n                callUpCommand()\r\n                break\r\n\r\n            case StatusKey.Down:\r\n                e.preventDefault()\r\n                callDownCommand()\r\n                break\r\n\r\n            case StatusKey.Cancel:\r\n                stopCommand()\r\n                break\r\n        }\r\n        \r\n        return e.key\r\n    }\r\n\r\n    const switchSubDirectory = (): void => {\r\n        indexCurrentDirectory++\r\n        if (indexCurrentDirectory > subDirectory.length - 1) \r\n            indexCurrentDirectory = 0\r\n        \r\n        setCurrentSubDirectory(allocateSubDirectory(subDirectory[indexCurrentDirectory],serverDirectory))\r\n        setValueInput(valueUser + currentSubDirectory)\r\n    }\r\n\r\n    const callDownCommand = () : void => {\r\n        indexCurrentHistory++\r\n        if (indexCurrentHistory > history.length - 1) \r\n            indexCurrentHistory = 0\r\n        \r\n        setValueInput(history[indexCurrentHistory].textCommand)\r\n    }\r\n\r\n    const callUpCommand = () : void => {\r\n        indexCurrentHistory--;\r\n        if (indexCurrentHistory < 0) \r\n            indexCurrentHistory =  history.length - 1;\r\n        \r\n        setValueInput(history[indexCurrentHistory].textCommand)\r\n    }\r\n    \r\n    const checkStopWrite = useCallback ((e: KeyboardEvent): string => {\r\n        if(e.key === StatusKey.Cancel)\r\n        return e.key\r\n        \r\n        return isDisabledWrite ? e.key = '' : e.key\r\n    },[])\r\n\r\n    const changeHandler = (e : FormEvent<HTMLInputElement>) : void => {\r\n        if(isDisabledWrite)\r\n            return;\r\n\r\n        setValueUser(e.currentTarget.value)\r\n        setValueInput(e.currentTarget.value)\r\n    }\r\n    \r\n    const scrollAuto = (e : HTMLInputElement) : void => {\r\n        e?.scrollIntoView(false)\r\n    }\r\n\r\n    return <div className='inputElement'>\r\n                <div>{replaceToOneSeparation(serverDirectory)}</div>\r\n                <input ref ={scrollAuto} value = {valueInput} onKeyDown = {eventHandler} onChange = {changeHandler} className='inputConsole'/>\r\n            </div> \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}