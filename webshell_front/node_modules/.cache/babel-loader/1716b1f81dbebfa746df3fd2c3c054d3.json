{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ASP.Net\\\\WebShell_2\\\\TaskDNS\\\\ClientApp\\\\src\\\\Input\\\\Input.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useReducer } from 'react';\nimport { allocateSubDirectory, replaceToOneSeparation } from './textProcessing';\nimport { ActionKind } from './Enum/ActionKind';\nimport { StatusKey } from './Enum/StatusKey';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  valueInput: '',\n  valueUser: '',\n  currentSubDirectory: ''\n};\nlet indexCurrentDirectory = 0;\nlet indexCurrentHistory = 0;\nconst InputReducer = (state, action) => {\n  switch (action.type) {\n    case 'ChangeAllData':\n      return {\n        ...state,\n        valueInput: action.valueInput,\n        valueUser: action.valueUser\n      };\n    case 'Clear':\n      return {\n        ...state,\n        valueInput: '',\n        valueUser: ''\n      };\n    case 'ChangeInputValue':\n      return {\n        ...state,\n        valueInput: action.valueInput\n      };\n    default:\n      throw new Error();\n  }\n};\n_c = InputReducer;\nexport const Input = _ref => {\n  _s();\n  let {\n    isDisabledWrite,\n    sendCommand,\n    stopCommand,\n    serverDirectory,\n    subDirectory,\n    history\n  } = _ref;\n  const [inputData, dispatch] = useReducer(InputReducer, initialState);\n  const eventHandler = e => {\n    checkStopWrite(e);\n    switch (e.key) {\n      case StatusKey.SendCommand:\n        sendCommand(inputData.valueInput);\n        dispatch({\n          type: ActionKind.Clear\n        });\n        break;\n      case StatusKey.SwitchSubDirectory:\n        e.preventDefault();\n        switchSubDirectory();\n        break;\n      case StatusKey.Up:\n        e.preventDefault();\n        callUpCommand();\n        break;\n      case StatusKey.Down:\n        e.preventDefault();\n        callDownCommand();\n        break;\n      case StatusKey.Cancel:\n        stopCommand();\n        break;\n    }\n    return e.key;\n  };\n  const switchSubDirectory = () => {\n    indexCurrentDirectory++;\n    if (indexCurrentDirectory > subDirectory.length - 1) indexCurrentDirectory = 0;\n    dispatch({\n      type: ActionKind.ChangeInputValue,\n      valueInput: inputData.valueUser + allocateSubDirectory(subDirectory[indexCurrentDirectory], serverDirectory)\n    });\n  };\n  const callDownCommand = () => {\n    indexCurrentHistory++;\n    if (indexCurrentHistory > history.length - 1) indexCurrentHistory = 0;\n    dispatch({\n      type: ActionKind.ChangeInputValue,\n      valueInput: history[indexCurrentHistory].textCommand\n    });\n  };\n  const callUpCommand = () => {\n    indexCurrentHistory--;\n    if (indexCurrentHistory < 0) indexCurrentHistory = history.length - 1;\n    dispatch({\n      type: ActionKind.ChangeInputValue,\n      valueInput: history[indexCurrentHistory].textCommand\n    });\n  };\n  const checkStopWrite = useCallback(e => {\n    if (e.key === StatusKey.Cancel) return e.key;\n    return isDisabledWrite ? e.key = '' : e.key;\n  }, []);\n  const changeHandler = e => {\n    if (isDisabledWrite) return;\n    dispatch({\n      type: ActionKind.ChangeAllData,\n      valueInput: e.currentTarget.value,\n      valueUser: e.currentTarget.value\n    });\n  };\n  const scrollAuto = e => {\n    e === null || e === void 0 ? void 0 : e.scrollIntoView(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputElement\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: replaceToOneSeparation(serverDirectory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: scrollAuto,\n      value: inputData.valueInput,\n      onKeyDown: eventHandler,\n      onChange: changeHandler,\n      className: \"inputConsole\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 12\n  }, this);\n};\n_s(Input, \"4ykbdkpkB3HGvD9ZFE3+oxOVYHM=\");\n_c2 = Input;\nvar _c, _c2;\n$RefreshReg$(_c, \"InputReducer\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"names":["useCallback","useReducer","allocateSubDirectory","replaceToOneSeparation","ActionKind","StatusKey","React","initialState","valueInput","valueUser","currentSubDirectory","indexCurrentDirectory","indexCurrentHistory","InputReducer","state","action","type","Error","Input","isDisabledWrite","sendCommand","stopCommand","serverDirectory","subDirectory","history","inputData","dispatch","eventHandler","e","checkStopWrite","key","SendCommand","Clear","SwitchSubDirectory","preventDefault","switchSubDirectory","Up","callUpCommand","Down","callDownCommand","Cancel","length","ChangeInputValue","textCommand","changeHandler","ChangeAllData","currentTarget","value","scrollAuto","scrollIntoView"],"sources":["C:/Project/ASP.Net/WebShell_2/TaskDNS/ClientApp/src/Input/Input.tsx"],"sourcesContent":["import { KeyboardEvent, FC, Key, FormEvent, useCallback, useReducer } from 'react'\r\nimport { allocateSubDirectory,replaceToOneSeparation } from './textProcessing'\r\nimport { IInputReducer } from './Interface/IInputReducer'\r\nimport { ActionKind } from './Enum/ActionKind'\r\nimport { StatusKey } from './Enum/StatusKey'\r\nimport { IInput } from './Interface/IInput'\r\nimport { Action } from './Type/Action'\r\nimport React from 'react'\r\n\r\nconst initialState = {valueInput: '', valueUser:'', currentSubDirectory: ''}\r\nlet indexCurrentDirectory = 0\r\nlet indexCurrentHistory = 0\r\n\r\nconst InputReducer = (state : IInputReducer, action : Action) : IInputReducer => {\r\n    switch(action.type){\r\n        case 'ChangeAllData':\r\n            return {...state, valueInput: action.valueInput, valueUser: action.valueUser}\r\n        case 'Clear':\r\n            return {...state, valueInput: '', valueUser: ''}\r\n        case 'ChangeInputValue':\r\n            return {...state, valueInput: action.valueInput}\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nexport const Input : FC<IInput> =  ({ isDisabledWrite, sendCommand, stopCommand, serverDirectory ,subDirectory,history})  => {\r\n    const [inputData,dispatch] = useReducer(InputReducer,initialState)\r\n\r\n    const eventHandler = (e: KeyboardEvent): Key => {\r\n        checkStopWrite(e)\r\n\r\n        switch (e.key) {\r\n            case StatusKey.SendCommand:\r\n                sendCommand(inputData.valueInput)\r\n                dispatch({type: ActionKind.Clear})\r\n                break\r\n\r\n            case StatusKey.SwitchSubDirectory:\r\n                e.preventDefault()\r\n                switchSubDirectory()\r\n                break\r\n\r\n            case StatusKey.Up:\r\n                e.preventDefault()\r\n                callUpCommand()\r\n                break\r\n\r\n            case StatusKey.Down:\r\n                e.preventDefault()\r\n                callDownCommand()\r\n                break\r\n\r\n            case StatusKey.Cancel:\r\n                stopCommand()\r\n                break\r\n        }\r\n        \r\n        return e.key\r\n    }\r\n\r\n    const switchSubDirectory = (): void => {\r\n        indexCurrentDirectory++\r\n        if (indexCurrentDirectory > subDirectory.length - 1) \r\n            indexCurrentDirectory = 0\r\n        \r\n        dispatch({ type: ActionKind.ChangeInputValue, valueInput: (inputData.valueUser + allocateSubDirectory(subDirectory[indexCurrentDirectory],serverDirectory))})\r\n    }\r\n\r\n    const callDownCommand = () : void => {\r\n        indexCurrentHistory++\r\n        if (indexCurrentHistory > history.length - 1) \r\n            indexCurrentHistory = 0\r\n        \r\n        dispatch({ type: ActionKind.ChangeInputValue, valueInput: history[indexCurrentHistory].textCommand})\r\n    }\r\n\r\n    const callUpCommand = () : void => {\r\n        indexCurrentHistory--;\r\n        if (indexCurrentHistory < 0) \r\n            indexCurrentHistory =  history.length - 1;\r\n        \r\n        dispatch({ type: ActionKind.ChangeInputValue, valueInput: history[indexCurrentHistory].textCommand})\r\n    }\r\n    \r\n    const checkStopWrite = useCallback ((e: KeyboardEvent): string => {\r\n        if(e.key === StatusKey.Cancel)\r\n        return e.key\r\n        \r\n        return isDisabledWrite ? e.key = '' : e.key\r\n    },[])\r\n\r\n    const changeHandler = (e : FormEvent<HTMLInputElement>) : void => {\r\n        if(isDisabledWrite)\r\n            return;\r\n\r\n\r\n        dispatch({ type: ActionKind.ChangeAllData, valueInput: e.currentTarget.value,valueUser:e.currentTarget.value })\r\n    }\r\n    \r\n    const scrollAuto = (e : HTMLInputElement) : void => {\r\n        e?.scrollIntoView(false)\r\n    }\r\n\r\n    return <div className='inputElement'>\r\n                <div>{replaceToOneSeparation(serverDirectory)}</div>\r\n                <input ref ={scrollAuto} value = {inputData.valueInput} onKeyDown = {eventHandler} onChange = {changeHandler} className='inputConsole'/>\r\n            </div> \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}