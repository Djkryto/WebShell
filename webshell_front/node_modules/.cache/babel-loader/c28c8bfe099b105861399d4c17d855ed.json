{"ast":null,"code":"class Repository {\n  constructor(token) {\n    this.token = '';\n    this.postCommandAsync = async command => {\n      const urlAddOnServer = 'https://localhost:7145/command/add';\n      const dataClient = {\n        id: 0,\n        data: '',\n        textCommand: command\n      };\n      if (command !== '') {\n        await fetch(urlAddOnServer, {\n          method: 'POST',\n          redirect: 'follow',\n          body: JSON.stringify(dataClient),\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': \"Bearer \" + this.token\n          }\n        });\n      }\n    };\n    this.currnetDirectoryAsync = async () => {\n      const urlGetDirectory = 'https://localhost:7145/command/getDirectory';\n      const responce = await fetch(urlGetDirectory, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + this.token\n        }\n      });\n      return await responce.text();\n    };\n    this.subDirectoriesAsync = async () => {\n      const urlGetDirectories = 'https://localhost:7145/command/getDirectories';\n      const responce = await fetch(urlGetDirectories, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + this.token\n        }\n      });\n      const responceJson = await responce.json();\n      const result = await responceJson;\n      return result;\n    };\n    this.getHistoryAsync = async () => {\n      const urlGetHistory = 'https://localhost:7145/command/getHistory';\n      const response = await fetch(urlGetHistory, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + this.token\n        }\n      });\n      const responceJson = await response.json();\n      const result = await responceJson;\n      return result;\n    };\n    this.stopCommandAsync = async () => {\n      const urlStopCommand = 'https://localhost:7145/command/Stop';\n      await fetch(urlStopCommand, {\n        method: 'POST',\n        redirect: 'follow',\n        body: JSON.stringify(null),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + this.token\n        }\n      });\n    };\n    this.token = token;\n    console.log(token);\n  }\n}\nexport const instanceRepository = token => {\n  return new Repository(token);\n};","map":{"version":3,"names":["Repository","constructor","token","postCommandAsync","command","urlAddOnServer","dataClient","id","data","textCommand","fetch","method","redirect","body","JSON","stringify","headers","currnetDirectoryAsync","urlGetDirectory","responce","text","subDirectoriesAsync","urlGetDirectories","responceJson","json","result","getHistoryAsync","urlGetHistory","response","stopCommandAsync","urlStopCommand","console","log","instanceRepository"],"sources":["C:/Project/ASP.Net/WebShell_2/TaskDNS/ClientApp/src/Server/Command/Repository.tsx"],"sourcesContent":["import { useContext } from 'react'\r\nimport { IHistory } from '../../Input/Interface/IHistory'\r\n\r\n\r\nclass Repository {\r\n    token = ''\r\n    constructor(token : string){\r\n       this.token = token\r\n       console.log(token)\r\n    }\r\n   \r\n\r\n    postCommandAsync = async (command : string) : Promise<void> => {\r\n        const urlAddOnServer = 'https://localhost:7145/command/add'\r\n        const dataClient = { id: 0, data: '', textCommand: command }\r\n        if (command !== '') {\r\n            await fetch(urlAddOnServer, {\r\n                method: 'POST',\r\n                redirect: 'follow',\r\n                body: JSON.stringify(dataClient),\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': \"Bearer \" + this.token\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    currnetDirectoryAsync = async () : Promise<string> => {\r\n        const urlGetDirectory = 'https://localhost:7145/command/getDirectory'\r\n        const responce = await fetch(urlGetDirectory, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + this.token\r\n            }\r\n        });\r\n        \r\n        return await responce.text()\r\n    }\r\n    \r\n    subDirectoriesAsync = async () : Promise<string[]> => {\r\n        const urlGetDirectories = 'https://localhost:7145/command/getDirectories'\r\n        const responce = await fetch(urlGetDirectories,{headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': \"Bearer \" + this.token\r\n        }})\r\n        const responceJson = await responce.json()\r\n        const result = await responceJson as string[]\r\n\r\n        return result\r\n    }\r\n\r\n    getHistoryAsync = async () : Promise<IHistory[]> => {\r\n        const urlGetHistory = 'https://localhost:7145/command/getHistory'\r\n        const response = await fetch(urlGetHistory,{headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': \"Bearer \" + this.token\r\n        }})\r\n        const responceJson = await response.json()\r\n        const result = await responceJson as IHistory[]\r\n\r\n        return result\r\n    }\r\n\r\n    stopCommandAsync = async () : Promise<void> => {\r\n\r\n        const urlStopCommand = 'https://localhost:7145/command/Stop'\r\n        await fetch(urlStopCommand, {\r\n            method: 'POST',\r\n            redirect: 'follow',\r\n            body: JSON.stringify(null),\r\n            headers: {  \r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json', \r\n                'Authorization': \"Bearer \" + this.token\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const instanceRepository = (token : string) : Repository=>  {\r\n    return new Repository(token)\r\n}"],"mappings":"AAIA,MAAMA,UAAU,CAAC;EAEbC,WAAW,CAACC,KAAc,EAAC;IAAA,KAD3BA,KAAK,GAAG,EAAE;IAAA,KAOVC,gBAAgB,GAAG,MAAOC,OAAgB,IAAqB;MAC3D,MAAMC,cAAc,GAAG,oCAAoC;MAC3D,MAAMC,UAAU,GAAG;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAEL;MAAQ,CAAC;MAC5D,IAAIA,OAAO,KAAK,EAAE,EAAE;QAChB,MAAMM,KAAK,CAACL,cAAc,EAAE;UACxBM,MAAM,EAAE,MAAM;UACdC,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,UAAU,CAAC;UAChCU,OAAO,EAAE;YACL,QAAQ,EAAE,kBAAkB;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACd;UACtC;QACJ,CAAC,CAAC;MACN;IACJ,CAAC;IAAA,KAEDe,qBAAqB,GAAG,YAA8B;MAClD,MAAMC,eAAe,GAAG,6CAA6C;MACrE,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACQ,eAAe,EAAE;QAC1CP,MAAM,EAAE,KAAK;QACbK,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACd;QACtC;MACJ,CAAC,CAAC;MAEF,OAAO,MAAMiB,QAAQ,CAACC,IAAI,EAAE;IAChC,CAAC;IAAA,KAEDC,mBAAmB,GAAG,YAAgC;MAClD,MAAMC,iBAAiB,GAAG,+CAA+C;MACzE,MAAMH,QAAQ,GAAG,MAAMT,KAAK,CAACY,iBAAiB,EAAC;QAACN,OAAO,EAAC;UACpD,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACd;QACtC;MAAC,CAAC,CAAC;MACH,MAAMqB,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAC1C,MAAMC,MAAM,GAAG,MAAMF,YAAwB;MAE7C,OAAOE,MAAM;IACjB,CAAC;IAAA,KAEDC,eAAe,GAAG,YAAkC;MAChD,MAAMC,aAAa,GAAG,2CAA2C;MACjE,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACiB,aAAa,EAAC;QAACX,OAAO,EAAC;UAChD,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACd;QACtC;MAAC,CAAC,CAAC;MACH,MAAMqB,YAAY,GAAG,MAAMK,QAAQ,CAACJ,IAAI,EAAE;MAC1C,MAAMC,MAAM,GAAG,MAAMF,YAA0B;MAE/C,OAAOE,MAAM;IACjB,CAAC;IAAA,KAEDI,gBAAgB,GAAG,YAA4B;MAE3C,MAAMC,cAAc,GAAG,qCAAqC;MAC5D,MAAMpB,KAAK,CAACoB,cAAc,EAAE;QACxBnB,MAAM,EAAE,MAAM;QACdC,QAAQ,EAAE,QAAQ;QAClBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC;QAC1BC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACd;QACtC;MACJ,CAAC,CAAC;IACN,CAAC;IA3EE,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB6B,OAAO,CAACC,GAAG,CAAC9B,KAAK,CAAC;EACrB;AA0EJ;AAEA,OAAO,MAAM+B,kBAAkB,GAAI/B,KAAc,IAAkB;EAC/D,OAAO,IAAIF,UAAU,CAACE,KAAK,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"module"}