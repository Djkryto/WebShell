{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ASP.Net\\\\WebShell_2\\\\TaskDNS\\\\ClientApp\\\\src\\\\Provider\\\\ConsoleDataProvider.tsx\",\n  _s = $RefreshSig$();\nimport { ConsoleOutputDataReducer } from \"../Output/Function/ConsoleOutputDataReducer\";\nimport React, { createContext, useCallback, useEffect, useReducer } from \"react\";\nimport { ConsoleDataReducer } from \"../Output/Function/ConsoleDataReducer\";\nimport { dataServer } from \"../Server/Command/Repository\";\nimport { serverHub } from \"../Server/WebSoket/Hub\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataConsoleContext = /*#__PURE__*/createContext({});\nexport const ConsoleDataProvider = children => {\n  _s();\n  const [outputData, dispatchOutput] = useReducer(ConsoleOutputDataReducer, {\n    output: [],\n    isDisabledWrite: false\n  });\n  const [consoleData, dispatchData] = useReducer(ConsoleDataReducer, {\n    directory: '',\n    history: [],\n    subDirectory: []\n  });\n  useEffect(() => {\n    const connectionToServer = async () => {\n      serverHub.connectionToHubAsync();\n      serverHub.sendCommand(getOutputHub);\n      await getConsoleDataAsync();\n    };\n    connectionToServer();\n  }, []);\n  const sendCommand = useCallback(async text => {\n    await dataServer.postCommandAsync(text.trim());\n    await getConsoleDataAsync();\n  }, []);\n  const stopCommand = useCallback(async () => {\n    await dataServer.stopCommandAsync();\n  }, []);\n  const getOutputHub = useCallback(dataHub => {\n    const line = dataHub.output;\n    const status = dataHub.status;\n    const isStopWriteUser = dataHub.status === 0 ? true : false;\n    const objectOutput = {\n      status,\n      line\n    };\n    if (line !== '') dispatchOutput({\n      type: 'changeAllValue',\n      data: {\n        isDisabledWrite: isStopWriteUser,\n        output: objectOutput\n      }\n    });\n  }, []);\n  const getConsoleDataAsync = useCallback(async () => {\n    const currnetDirectory = await dataServer.currnetDirectoryAsync();\n    const subDirectory = await dataServer.subDirectoriesAsync();\n    const history = await dataServer.getHistoryAsync();\n    const directory = currnetDirectory.replace('\\\"', '').replace('\\\"', '');\n    dispatchData({\n      type: 'changeAllValue',\n      data: {\n        directory,\n        subDirectory,\n        history\n      }\n    });\n  }, []);\n  const data = {\n    outputData,\n    consoleData,\n    sendCommand,\n    stopCommand\n  };\n  return /*#__PURE__*/_jsxDEV(DataConsoleContext.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 12\n  }, this);\n};\n_s(ConsoleDataProvider, \"js4BAu0f3lQsVqJ1JVa41pCg5c0=\");\n_c = ConsoleDataProvider;\nvar _c;\n$RefreshReg$(_c, \"ConsoleDataProvider\");","map":{"version":3,"names":["ConsoleOutputDataReducer","React","createContext","useCallback","useEffect","useReducer","ConsoleDataReducer","dataServer","serverHub","DataConsoleContext","ConsoleDataProvider","children","outputData","dispatchOutput","output","isDisabledWrite","consoleData","dispatchData","directory","history","subDirectory","connectionToServer","connectionToHubAsync","sendCommand","getOutputHub","getConsoleDataAsync","text","postCommandAsync","trim","stopCommand","stopCommandAsync","dataHub","line","status","isStopWriteUser","objectOutput","type","data","currnetDirectory","currnetDirectoryAsync","subDirectoriesAsync","getHistoryAsync","replace"],"sources":["C:/Project/ASP.Net/WebShell_2/TaskDNS/ClientApp/src/Provider/ConsoleDataProvider.tsx"],"sourcesContent":["import { ConsoleOutputDataReducer } from \"../Output/Function/ConsoleOutputDataReducer\"\r\nimport React,{ createContext, useCallback, useEffect, useReducer } from \"react\"\r\nimport { ConsoleDataReducer } from \"../Output/Function/ConsoleDataReducer\"\r\nimport { dataServer } from \"../Server/Command/Repository\"\r\nimport { IDataHub } from \"../Output/Interface/IDataHub\"\r\nimport { serverHub } from \"../Server/WebSoket/Hub\"\r\nimport { IConsoleOutputDataReducer } from \"../Output/Interface/IConsoleOutputDataReducer\"\r\n\r\ninterface DataConsole {\r\n    outputData: IConsoleOutputDataReducer,\r\n    consoleData: IConsoleOutputDataReducer,\r\n    sendCommnad: (text:string) => Promise<void>,\r\n    stopCommand: () => Promise<void>\r\n}\r\n\r\nexport const DataConsoleContext = createContext({})\r\n\r\nexport const ConsoleDataProvider = (children)=>{\r\n    const [outputData, dispatchOutput] = useReducer(ConsoleOutputDataReducer,{output: [], isDisabledWrite: false})\r\n    const [consoleData, dispatchData] = useReducer(ConsoleDataReducer,{ directory: '', history: [], subDirectory: [] })\r\n    \r\n    useEffect(() => {\r\n        const connectionToServer = async () : Promise<void> => {\r\n            serverHub.connectionToHubAsync()\r\n            serverHub.sendCommand(getOutputHub)\r\n            await getConsoleDataAsync()\r\n        }\r\n        \r\n        connectionToServer()\r\n    }, []) \r\n    \r\n    const sendCommand = useCallback(async (text : string): Promise<void> => {\r\n        await dataServer.postCommandAsync(text.trim())\r\n        await getConsoleDataAsync()\r\n    },[])\r\n\r\n    const stopCommand = useCallback(async () : Promise<void> => {\r\n        await dataServer.stopCommandAsync()\r\n    },[])\r\n\r\n    const getOutputHub = useCallback((dataHub : IDataHub) : void => {\r\n        const line = dataHub.output\r\n        const status = dataHub.status\r\n        \r\n        const isStopWriteUser = dataHub.status === 0? true : false\r\n        const objectOutput = {status,line}\r\n\r\n        if(line !== '')\r\n            dispatchOutput({type: 'changeAllValue', data: {isDisabledWrite: isStopWriteUser, output: objectOutput}})\r\n    }, [])\r\n\r\n    const getConsoleDataAsync = useCallback(async () : Promise<void> => {\r\n        const currnetDirectory = await dataServer.currnetDirectoryAsync()\r\n        const subDirectory = await dataServer.subDirectoriesAsync()\r\n        const history = await dataServer.getHistoryAsync()\r\n\r\n        const directory = currnetDirectory.replace('\\\"','').replace('\\\"','')\r\n\r\n        dispatchData({type: 'changeAllValue', data: {directory, subDirectory, history}})\r\n    }, [])\r\n\r\n    const data = {outputData,consoleData,sendCommand,stopCommand}\r\n\r\n    return(<DataConsoleContext.Provider value={data}>\r\n                {children}\r\n            </DataConsoleContext.Provider>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}