{"ast":null,"code":"// @ts-nocheck\n\nimport * as signalR from '@microsoft/signalr';\n/*\r\n* Класс для получения данных с Hub.\r\n*/\nclass Hub {\n  constructor() {\n    this.hub = void 0;\n    this.connectionToHubAsync = async (isJWT, token) => {\n      this.hub = new signalR.HubConnectionBuilder().withUrl('https://localhost:7145/chat', {\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets\n      }).build();\n      this.setHeadersHub(isJWT, token);\n      this.hub.start();\n    };\n    this.setHeadersHub = (isJWT, token) => {\n      if (isJWT) this.hub.Headers.Add(\"Bearer: \" + token);else this.hub.Headers.Add(\"Cookie \" + token);\n    };\n    this.getDataFromHub = handle => {\n      if (this.hub === null) return;\n      this.hub.on('Send', handle);\n    };\n    this.sendCommand = command => this.hub.invoke('AddCommand', command);\n    this.stopProcessingCommand = () => this.hub.invoke('Stop');\n    this.getCurrentDirectory = () => this.hub.invoke('GetDirectory');\n    this.getSubDirectories = () => this.hub.invoke('GetDirectories');\n    this.getHistoryAsync = () => this.hub.invoke('GetHistory');\n  }\n}\nexport const serverHub = new Hub();","map":{"version":3,"names":["signalR","Hub","hub","connectionToHubAsync","isJWT","token","HubConnectionBuilder","withUrl","skipNegotiation","transport","HttpTransportType","WebSockets","build","setHeadersHub","start","Headers","Add","getDataFromHub","handle","on","sendCommand","command","invoke","stopProcessingCommand","getCurrentDirectory","getSubDirectories","getHistoryAsync","serverHub"],"sources":["C:/Project/ASP.Net/TestGit/webshell_front/src/Server/WebSoket/Hub.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport { IHistory } from '../../Console/Input/Interface/IHistory'\r\nimport { IDataHub } from '../../Console/Output/Interface/IDataHub'\r\nimport * as signalR from '@microsoft/signalr'\r\n\r\ninterface Handler {\r\n    (data : IDataHub): void\r\n}\r\n/*\r\n* Класс для получения данных с Hub.\r\n*/\r\nclass Hub {\r\n    hub \r\n    /*\r\n    * Функция подключения и запуска signalR.\r\n    */\r\n    connectionToHubAsync = async (isJWT:bool,token : string) =>{\r\n        this.hub = new signalR.HubConnectionBuilder() \r\n            .withUrl('https://localhost:7145/chat', {skipNegotiation: true, transport: signalR.HttpTransportType.WebSockets})\r\n            .build()\r\n        this.setHeadersHub(isJWT,token)\r\n        this.hub.start()\r\n    }\r\n\r\n    setHeadersHub = (isJWT: boolean, token : string) => { \r\n        if(isJWT)\r\n            this.hub.Headers.Add(\"Bearer: \" + token)\r\n        else\r\n            this.hub.Headers.Add(\"Cookie \" + token)\r\n    }\r\n\r\n    /*\r\n    * Функция для получения данных с Hub.\r\n    * @param handle обработчик данных с hub.\r\n    */\r\n    getDataFromHub = (handle : Handler) =>{\r\n        if(this.hub === null)\r\n            return\r\n\r\n        this.hub.on('Send', handle)\r\n    }\r\n\r\n   /*\r\n    * Функция для отправки комманды на сервер.\r\n    * @param command команда пользователя.\r\n    */\r\n    sendCommand = (command : string) : Promise<void> => this.hub.invoke('AddCommand',command)\r\n   /*\r\n    * Функция останавливающая выполняюмую команду на сервере ранее введенная пользователем.\r\n    */\r\n    stopProcessingCommand = () : Promise<void> => this.hub.invoke('Stop')\r\n   /*\r\n    * Функция получающая от сервера текущую директорию\r\n    */\r\n    getCurrentDirectory = () : Promise<string> => this.hub.invoke('GetDirectory')\r\n   /*\r\n    * Функция получающая дочерние директории.\r\n    */\r\n    getSubDirectories = () : Promise<string[]> => this.hub.invoke('GetDirectories')\r\n /*\r\n    * Функция получающая историю комманд введеных пользователем.\r\n    */\r\n    getHistoryAsync = () : Promise<IHistory[]> => this.hub.invoke('GetHistory')\r\n}\r\n\r\nexport const serverHub = new Hub()"],"mappings":"AAAA;;AAGA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAK7C;AACA;AACA;AACA,MAAMC,GAAG,CAAC;EAAA;IAAA,KACNC,GAAG;IAAA,KAIHC,oBAAoB,GAAG,OAAOC,KAAU,EAACC,KAAc,KAAI;MACvD,IAAI,CAACH,GAAG,GAAG,IAAIF,OAAO,CAACM,oBAAoB,EAAE,CACxCC,OAAO,CAAC,6BAA6B,EAAE;QAACC,eAAe,EAAE,IAAI;QAAEC,SAAS,EAAET,OAAO,CAACU,iBAAiB,CAACC;MAAU,CAAC,CAAC,CAChHC,KAAK,EAAE;MACZ,IAAI,CAACC,aAAa,CAACT,KAAK,EAACC,KAAK,CAAC;MAC/B,IAAI,CAACH,GAAG,CAACY,KAAK,EAAE;IACpB,CAAC;IAAA,KAEDD,aAAa,GAAG,CAACT,KAAc,EAAEC,KAAc,KAAK;MAChD,IAAGD,KAAK,EACJ,IAAI,CAACF,GAAG,CAACa,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGX,KAAK,CAAC,MAExC,IAAI,CAACH,GAAG,CAACa,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGX,KAAK,CAAC;IAC/C,CAAC;IAAA,KAMDY,cAAc,GAAIC,MAAgB,IAAI;MAClC,IAAG,IAAI,CAAChB,GAAG,KAAK,IAAI,EAChB;MAEJ,IAAI,CAACA,GAAG,CAACiB,EAAE,CAAC,MAAM,EAAED,MAAM,CAAC;IAC/B,CAAC;IAAA,KAMDE,WAAW,GAAIC,OAAgB,IAAqB,IAAI,CAACnB,GAAG,CAACoB,MAAM,CAAC,YAAY,EAACD,OAAO,CAAC;IAAA,KAIzFE,qBAAqB,GAAG,MAAsB,IAAI,CAACrB,GAAG,CAACoB,MAAM,CAAC,MAAM,CAAC;IAAA,KAIrEE,mBAAmB,GAAG,MAAwB,IAAI,CAACtB,GAAG,CAACoB,MAAM,CAAC,cAAc,CAAC;IAAA,KAI7EG,iBAAiB,GAAG,MAA0B,IAAI,CAACvB,GAAG,CAACoB,MAAM,CAAC,gBAAgB,CAAC;IAAA,KAI/EI,eAAe,GAAG,MAA4B,IAAI,CAACxB,GAAG,CAACoB,MAAM,CAAC,YAAY,CAAC;EAAA;AAC/E;AAEA,OAAO,MAAMK,SAAS,GAAG,IAAI1B,GAAG,EAAE"},"metadata":{},"sourceType":"module"}