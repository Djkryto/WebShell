{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ASP.Net\\\\WebShell_2\\\\TaskDNS\\\\ClientApp\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// @ts-nocheck\nimport { serverSignalR } from './Server/WebSoket(SignalR)/SignalR';\nimport { dataServer } from './Server/Command/Repository';\nimport { useCallback, useEffect, useReducer, useState } from 'react';\nimport { Output } from './Output/Output';\nimport { Input } from './Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const [output, setOutput] = useState([]);\n  const [isDisabledWrite, setIsDisabledWrite] = useState(false);\n  const [consoleData, setConsoleData] = useReducer(reducer, [{\n    directory: '',\n    history: [],\n    subDirectory: []\n  }]);\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'Complete':\n        break;\n    }\n  };\n  useEffect(() => {\n    const start = async () => {\n      serverSignalR.connectionToHubAsync();\n      serverSignalR.sendCommand(changeOutput);\n      await getConsoleDataAsync();\n    };\n    start();\n  }, []);\n  const sendCommand = async text => {\n    dataServer.postCommandAsync(text.trim());\n    await getConsoleDataAsync();\n  };\n  const stopCommand = useCallback(async () => {\n    await dataServer.stopCommandAsync();\n  }, []);\n  const changeOutput = dataHub => {\n    const line = dataHub.output;\n    const status = dataHub.status;\n    if (line !== '') {\n      setIsDisabledWrite(status === 0 ? true : false);\n      setOutput(output => [...output, {\n        status,\n        line\n      }]);\n    }\n  };\n  const getConsoleDataAsync = async () => {\n    const currnetDirectory = await dataServer.currnetDirectoryAsync();\n    const subDirectory = await dataServer.subDirectoriesAsync();\n    const history = await dataServer.getHistoryAsync();\n    setConsoleData({\n      directory: currnetDirectory.replaceAll('\"', ''),\n      subDirectory,\n      history\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console\",\n    children: [/*#__PURE__*/_jsxDEV(Output, {\n      output: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      isDisabledWrite: isDisabledWrite,\n      sendCommand: sendCommand,\n      stopCommand: stopCommand,\n      serverDirectory: consoleData.directory,\n      subDirectory: consoleData.subDirectory,\n      history: consoleData.history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"ASQGo4p+OIDuhx8vWIDjX6OGBrg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["serverSignalR","dataServer","useCallback","useEffect","useReducer","useState","Output","Input","App","output","setOutput","isDisabledWrite","setIsDisabledWrite","consoleData","setConsoleData","reducer","directory","history","subDirectory","state","action","type","start","connectionToHubAsync","sendCommand","changeOutput","getConsoleDataAsync","text","postCommandAsync","trim","stopCommand","stopCommandAsync","dataHub","line","status","currnetDirectory","currnetDirectoryAsync","subDirectoriesAsync","getHistoryAsync","replaceAll"],"sources":["C:/Project/ASP.Net/WebShell_2/TaskDNS/ClientApp/src/App.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport { serverSignalR } from './Server/WebSoket(SignalR)/SignalR'\r\nimport { dataServer } from './Server/Command/Repository'\r\nimport { IWriteOutput} from './Output/Interface/IWriteOutput'\r\nimport { useCallback, useEffect, useReducer, useState } from 'react'\r\nimport { Output } from './Output/Output'\r\nimport { Input } from './Input/Input'\r\nimport { FC } from 'react'\r\n\r\ninterface IConsoleData{\r\n    directory: string,\r\n    history: string[],\r\n    subDirectory: string[]\r\n}\r\n\r\nexport const App = () : FC => {\r\n    const [output, setOutput] = useState<IWriteOutput>([])\r\n    const [isDisabledWrite, setIsDisabledWrite] = useState(false)\r\n    const [consoleData, setConsoleData] = useReducer<IConsoleData>(reducer,[{\r\n        directory: '',\r\n        history: [],\r\n        subDirectory: []\r\n    }])\r\n    const reducer = (state,action) =>{\r\n        switch(action.type){\r\n            case 'Complete':\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const start = async () : Promise<void> =>{\r\n            serverSignalR.connectionToHubAsync()\r\n            serverSignalR.sendCommand(changeOutput)\r\n            await getConsoleDataAsync()\r\n        }\r\n        \r\n        start()\r\n    }, [])\r\n\r\n    const sendCommand = async (text : string): Promise<void> => {\r\n        dataServer.postCommandAsync(text.trim())\r\n        await getConsoleDataAsync()\r\n    }\r\n\r\n    const stopCommand = useCallback(async () : Promise<void> => {\r\n        await dataServer.stopCommandAsync()\r\n    },[])\r\n\r\n    const changeOutput = (dataHub) : void => {\r\n        const line = dataHub.output as string\r\n        const status = dataHub.status as number\r\n        \r\n        if(line !== ''){\r\n            setIsDisabledWrite(status === 0? true : false)\r\n            setOutput((output) => [...output,{status ,line}])\r\n        }\r\n    }\r\n\r\n    const getConsoleDataAsync = async () : Promise<void> => {\r\n        const currnetDirectory = await dataServer.currnetDirectoryAsync()\r\n        const subDirectory = await dataServer.subDirectoriesAsync()\r\n        const history = await dataServer.getHistoryAsync()\r\n            \r\n        setConsoleData({\r\n            directory: currnetDirectory.replaceAll('\"', ''),\r\n            subDirectory,\r\n            history\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='console'>\r\n            <Output output = {output}/>\r\n            <Input \r\n            isDisabledWrite={isDisabledWrite} \r\n            sendCommand = {sendCommand}\r\n            stopCommand = {stopCommand}\r\n            serverDirectory={consoleData.directory}  \r\n            subDirectory={consoleData.subDirectory}\r\n            history = {consoleData.history}\r\n            />\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}