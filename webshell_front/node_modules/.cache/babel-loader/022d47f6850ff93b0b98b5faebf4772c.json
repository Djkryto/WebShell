{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ASP.Net\\\\WebShell_2\\\\TaskDNS\\\\ClientApp\\\\src\\\\Page\\\\Console.tsx\",\n  _s = $RefreshSig$();\n// @ts-nocheck\n\nimport { useCallback, useEffect, useReducer } from 'react';\nimport { dataServer } from '../Server/Command/Repository';\nimport { serverHub } from '../Server/WebSoket/Hub';\nimport { Output } from '../Output/Output';\nimport { Input } from '../Input/Input';\nimport '../css/console.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConsoleDataReducer = (state, action) => {\n  switch (action.type) {\n    case 'changeAllValue':\n      return {\n        directory: action.data.directory,\n        history: action.data.history,\n        subDirectory: action.data.subDirectory\n      };\n    default:\n      throw new Error();\n  }\n};\n_c = ConsoleDataReducer;\nconst ConsoleOutputDataReducer = (state, action) => {\n  switch (action.type) {\n    case 'changeAllValue':\n      return {\n        output: action.data.output,\n        isDisableWrite: action.data.isDisabledWrite\n      };\n    default:\n      throw new Error();\n  }\n};\n_c2 = ConsoleOutputDataReducer;\nexport const Console = () => {\n  _s();\n  //const [output, setOutput] = useState<IWriteOutput>([])\n  //const [isDisabledWrite, setIsDisabledWrite] = useState(false)\n  const [outputData, dispatchOutput] = useReducer(ConsoleOutputDataReducer, {\n    output: [],\n    isDisabledWrite: false\n  });\n  const [consoleData, dispatchData] = useReducer(ConsoleDataReducer, {\n    directory: '',\n    history: [],\n    subDirectory: []\n  });\n  useEffect(() => {\n    const connectionToServer = async () => {\n      serverHub.connectionToHubAsync();\n      serverHub.sendCommand(getOutputHub);\n      await getConsoleDataAsync();\n    };\n    connectionToServer();\n  }, []);\n  const sendCommand = useCallback(async text => {\n    await dataServer.postCommandAsync(text.trim());\n    await getConsoleDataAsync();\n  }, []);\n  const stopCommand = useCallback(async () => {\n    await dataServer.stopCommandAsync();\n  }, []);\n  const getOutputHub = useCallback(dataHub => {\n    const line = dataHub.output;\n    const status = dataHub.status;\n    if (line !== '') {\n      dispatchOutput({\n        type: 'changeAllValue',\n        data: {\n          isDisabledWrite: status,\n          output: line\n        }\n      });\n      //setIsDisabledWrite(status === 0? true : false)\n      //setOutput((output) => [...output,{status ,line}])\n    }\n  }, []);\n  const getConsoleDataAsync = useCallback(async () => {\n    const currnetDirectory = await dataServer.currnetDirectoryAsync();\n    const subDirectory = await dataServer.subDirectoriesAsync();\n    const history = await dataServer.getHistoryAsync();\n    const directory = currnetDirectory.replaceAll('\\\"', '');\n    dispatchData({\n      type: 'changeAllValue',\n      data: {\n        directory,\n        subDirectory,\n        history\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console\",\n    children: [/*#__PURE__*/_jsxDEV(Output, {\n      output: outputData.output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      isDisabledWrite: outputData.isDisabledWrite,\n      sendCommand: sendCommand,\n      stopCommand: stopCommand,\n      serverDirectory: consoleData.directory,\n      subDirectory: consoleData.subDirectory,\n      history: consoleData.history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Console, \"6qgzUNGEn2z1LU2nLQhobqShpos=\");\n_c3 = Console;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ConsoleDataReducer\");\n$RefreshReg$(_c2, \"ConsoleOutputDataReducer\");\n$RefreshReg$(_c3, \"Console\");","map":{"version":3,"names":["useCallback","useEffect","useReducer","dataServer","serverHub","Output","Input","ConsoleDataReducer","state","action","type","directory","data","history","subDirectory","Error","ConsoleOutputDataReducer","output","isDisableWrite","isDisabledWrite","Console","outputData","dispatchOutput","consoleData","dispatchData","connectionToServer","connectionToHubAsync","sendCommand","getOutputHub","getConsoleDataAsync","text","postCommandAsync","trim","stopCommand","stopCommandAsync","dataHub","line","status","currnetDirectory","currnetDirectoryAsync","subDirectoriesAsync","getHistoryAsync","replaceAll"],"sources":["C:/Project/ASP.Net/WebShell_2/TaskDNS/ClientApp/src/Page/Console.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport { ActionConsoleData } from '../Output/Type/ActionConsoleData'\r\nimport { useCallback, useEffect, useReducer, useState } from 'react'\r\nimport { ActionOutputData } from '../Output/Type/ActionOutputData'\r\nimport { IConsoleData } from '../Output/Interface/IConsoleData'\r\nimport { IWriteOutput} from '../Output/Interface/IWriteOutput'\r\nimport { dataServer } from '../Server/Command/Repository'\r\nimport { serverHub } from '../Server/WebSoket/Hub'\r\nimport { Output } from '../Output/Output'\r\nimport { Input } from '../Input/Input'\r\nimport '../css/console.css'\r\n\r\nconst ConsoleDataReducer = (state : IConsoleData, action: ActionConsoleData) : IConsoleData => {\r\n    switch (action.type) {\r\n      case 'changeAllValue':\r\n        return {directory: action.data.directory, history: action.data.history, subDirectory: action.data.subDirectory}\r\n      default:\r\n        throw new Error();\r\n    }\r\n}\r\n\r\nconst ConsoleOutputDataReducer = (state : IConsoleOutputDataReducer,action : ActionOutputData) : IConsoleOutputDataReducer => {\r\n    switch(action.type){\r\n        case 'changeAllValue':\r\n            return { output: action.data.output, isDisableWrite: action.data.isDisabledWrite }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\ninterface IConsoleOutputDataReducer{\r\n    output: IWriteOutput[],\r\n    isDisableWrite: boolean\r\n}\r\n\r\nexport const Console : FC = () =>{\r\n    //const [output, setOutput] = useState<IWriteOutput>([])\r\n    //const [isDisabledWrite, setIsDisabledWrite] = useState(false)\r\n    const [outputData, dispatchOutput] = useReducer(ConsoleOutputDataReducer,{output: [],isDisabledWrite: false})\r\n    const [consoleData, dispatchData] = useReducer(ConsoleDataReducer,{ directory: '', history: [], subDirectory: [] })\r\n    \r\n    useEffect(() => {\r\n        const connectionToServer = async () : Promise<void> =>{\r\n            serverHub.connectionToHubAsync()\r\n            serverHub.sendCommand(getOutputHub)\r\n            await getConsoleDataAsync()\r\n        }\r\n        \r\n        connectionToServer()\r\n    }, []) \r\n\r\n    const sendCommand = useCallback(async (text : string): Promise<void> => {\r\n        await dataServer.postCommandAsync(text.trim())\r\n        await getConsoleDataAsync()\r\n    },[])\r\n\r\n    const stopCommand = useCallback(async () : Promise<void> => {\r\n        await dataServer.stopCommandAsync()\r\n    },[])\r\n\r\n    const getOutputHub = useCallback((dataHub) : void => {\r\n        const line = dataHub.output as string\r\n        const status = dataHub.status as number\r\n        \r\n        if(line !== ''){\r\n            dispatchOutput({type: 'changeAllValue', data: {isDisabledWrite: status, output: line}})\r\n            //setIsDisabledWrite(status === 0? true : false)\r\n            //setOutput((output) => [...output,{status ,line}])\r\n        }\r\n    }, [])\r\n\r\n    const getConsoleDataAsync = useCallback(async () : Promise<void> => {\r\n        const currnetDirectory = await dataServer.currnetDirectoryAsync()\r\n        const subDirectory = await dataServer.subDirectoriesAsync()\r\n        const history = await dataServer.getHistoryAsync()\r\n\r\n        const directory = currnetDirectory.replaceAll('\\\"','')\r\n\r\n        dispatchData({type: 'changeAllValue', data: {directory, subDirectory, history}})\r\n    }, [])\r\n\r\n    return(\r\n    <div className='console'>\r\n        <Output output = {outputData.output}/>\r\n        <Input \r\n            isDisabledWrite={outputData.isDisabledWrite} \r\n            sendCommand = {sendCommand}\r\n            stopCommand = {stopCommand}\r\n            serverDirectory={consoleData.directory}  \r\n            subDirectory={consoleData.subDirectory}\r\n            history = {consoleData.history}\r\n        />\r\n    </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}