{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ASP.Net\\\\WebShell_2\\\\TaskDNS\\\\ClientApp\\\\src\\\\Page\\\\Console.tsx\",\n  _s = $RefreshSig$();\nimport { ConsoleOutputDataReducer } from '../Output/Function/ConsoleOutputDataReducer';\nimport { ConsoleDataReducer } from '../Output/Function/ConsoleDataReducer';\nimport React, { useCallback, useEffect, useReducer } from 'react';\nimport { dataServer } from '../Server/Command/Repository';\nimport { serverHub } from '../Server/WebSoket/Hub';\nimport { Output } from '../Output/Output';\nimport { Input } from '../Input/Input';\nimport '../css/console.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Console = () => {\n  _s();\n  const [outputData, dispatchOutput] = useReducer(ConsoleOutputDataReducer, {\n    output: [{\n      status: '',\n      line: ''\n    }, {\n      status: '',\n      line: ''\n    }],\n    isDisabledWrite: false\n  });\n  const [consoleData, dispatchData] = useReducer(ConsoleDataReducer, {\n    directory: '',\n    history: [],\n    subDirectory: []\n  });\n  useEffect(() => {\n    const connectionToServer = async () => {\n      serverHub.connectionToHubAsync();\n      serverHub.sendCommand(getOutputHub);\n      await getConsoleDataAsync();\n    };\n    connectionToServer();\n  }, []);\n  const sendCommand = useCallback(async text => {\n    await dataServer.postCommandAsync(text.trim());\n    await getConsoleDataAsync();\n  }, []);\n  const stopCommand = useCallback(async () => {\n    await dataServer.stopCommandAsync();\n  }, []);\n  const getOutputHub = useCallback(dataHub => {\n    const line = dataHub.output;\n    const status = dataHub.status;\n    const isStopWriteUser = status === 0 ? true : false;\n    const objectOutput = {\n      status,\n      line\n    };\n    if (line !== '') dispatchOutput({\n      type: 'changeAllValue',\n      data: {\n        isDisabledWrite: isStopWriteUser,\n        output: objectOutput\n      }\n    });\n  }, []);\n  const getConsoleDataAsync = useCallback(async () => {\n    const currnetDirectory = await dataServer.currnetDirectoryAsync();\n    const subDirectory = await dataServer.subDirectoriesAsync();\n    const history = await dataServer.getHistoryAsync();\n    const directory = currnetDirectory.replace('\\\"', '');\n    dispatchData({\n      type: 'changeAllValue',\n      data: {\n        directory,\n        subDirectory,\n        history\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console\",\n    children: [/*#__PURE__*/_jsxDEV(Output, {\n      output: outputData.output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      isDisabledWrite: outputData.isDisabledWrite,\n      sendCommand: sendCommand,\n      stopCommand: stopCommand,\n      serverDirectory: consoleData.directory,\n      subDirectory: consoleData.subDirectory,\n      history: consoleData.history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Console, \"kdhhEZT2vjpiILRRzJVDZghY6Ko=\");\n_c = Console;\nvar _c;\n$RefreshReg$(_c, \"Console\");","map":{"version":3,"names":["ConsoleOutputDataReducer","ConsoleDataReducer","React","useCallback","useEffect","useReducer","dataServer","serverHub","Output","Input","Console","outputData","dispatchOutput","output","status","line","isDisabledWrite","consoleData","dispatchData","directory","history","subDirectory","connectionToServer","connectionToHubAsync","sendCommand","getOutputHub","getConsoleDataAsync","text","postCommandAsync","trim","stopCommand","stopCommandAsync","dataHub","isStopWriteUser","objectOutput","type","data","currnetDirectory","currnetDirectoryAsync","subDirectoriesAsync","getHistoryAsync","replace"],"sources":["C:/Project/ASP.Net/WebShell_2/TaskDNS/ClientApp/src/Page/Console.tsx"],"sourcesContent":["import { ConsoleOutputDataReducer } from '../Output/Function/ConsoleOutputDataReducer'\r\nimport { ConsoleDataReducer } from '../Output/Function/ConsoleDataReducer'\r\nimport React,{ FC, useCallback, useEffect, useReducer } from 'react'\r\nimport { dataServer } from '../Server/Command/Repository'\r\nimport { serverHub } from '../Server/WebSoket/Hub'\r\nimport { Output } from '../Output/Output'\r\nimport { Input } from '../Input/Input'\r\nimport '../css/console.css'\r\n\r\nexport const Console : FC = () =>{\r\n    const [outputData, dispatchOutput] = useReducer(ConsoleOutputDataReducer,{output: [{status: '',line:''},{status: '',line:''}],isDisabledWrite: false})\r\n    const [consoleData, dispatchData] = useReducer(ConsoleDataReducer,{ directory: '', history: [], subDirectory: [] })\r\n    \r\n    useEffect(() => {\r\n        const connectionToServer = async () : Promise<void> => {\r\n            serverHub.connectionToHubAsync()\r\n            serverHub.sendCommand(getOutputHub)\r\n            await getConsoleDataAsync()\r\n        }\r\n        \r\n        connectionToServer()\r\n    }, []) \r\n\r\n    const sendCommand = useCallback(async (text : string): Promise<void> => {\r\n        await dataServer.postCommandAsync(text.trim())\r\n        await getConsoleDataAsync()\r\n    },[])\r\n\r\n    const stopCommand = useCallback(async () : Promise<void> => {\r\n        await dataServer.stopCommandAsync()\r\n    },[])\r\n\r\n    const getOutputHub = useCallback((dataHub) : void => {\r\n        const line = dataHub.output as string\r\n        const status = dataHub.status as number\r\n        \r\n        const isStopWriteUser = status === 0? true : false\r\n        const objectOutput = {status,line}\r\n\r\n        if(line !== '')\r\n            dispatchOutput({type: 'changeAllValue', data: {isDisabledWrite: isStopWriteUser, output: objectOutput}})\r\n    }, [])\r\n\r\n    const getConsoleDataAsync = useCallback(async () : Promise<void> => {\r\n        const currnetDirectory = await dataServer.currnetDirectoryAsync()\r\n        const subDirectory = await dataServer.subDirectoriesAsync()\r\n        const history = await dataServer.getHistoryAsync()\r\n\r\n        const directory = currnetDirectory.replace('\\\"','')\r\n\r\n        dispatchData({type: 'changeAllValue', data: {directory, subDirectory, history}})\r\n    }, [])\r\n\r\n    return(\r\n    <div className='console'>\r\n        <Output output = {outputData.output}/>\r\n        <Input \r\n            isDisabledWrite={outputData.isDisabledWrite} \r\n            sendCommand = {sendCommand}\r\n            stopCommand = {stopCommand}\r\n            serverDirectory={consoleData.directory}  \r\n            subDirectory={consoleData.subDirectory}\r\n            history = {consoleData.history}\r\n        />\r\n    </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}