{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ASP.Net\\\\TestGit\\\\webshell_front\\\\src\\\\Console\\\\View\\\\View.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useReducer, useContext } from 'react';\nimport { allocateSubDirectory, replaceToOneSeparation } from './Function/DirectoryProcessing';\nimport { DataConsoleContext } from '../../Context/ConsoleContext';\nimport { ViewReducer } from './Reducers/ViewReducer';\nimport { ActionKind } from './Enum/ActionKind';\nimport { StatusKey } from './Enum/StatusKey';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet indexCurrentDirectory = 0;\nlet indexCurrentHistory = 0;\n/*\r\n *  Функциональный компонент отображающий ввод данных.\r\n */\nexport const View = () => {\n  _s();\n  //Хранение данных Введенных пользователем.\n  const [inputData, dispatch] = useReducer(ViewReducer, {\n    valueInput: '',\n    valueUser: '',\n    currentSubDirectory: ''\n  });\n  //Данные для с выводом данных элемента Output.\n  const {\n    outputData,\n    consoleData,\n    sendCommand,\n    stopCommand\n  } = useContext(DataConsoleContext);\n\n  /*\r\n   *  Функция для обработки нажатия горячих клавишь.\r\n   */\n  const eventHandler = e => {\n    checkStopWrite(e);\n    switch (e.key) {\n      case StatusKey.SendCommand:\n        sendCommand(inputData.valueInput);\n        dispatch({\n          type: ActionKind.Clear\n        });\n        break;\n      case StatusKey.SwitchSubDirectory:\n        e.preventDefault();\n        switchSubDirectory();\n        break;\n      case StatusKey.Up:\n        e.preventDefault();\n        callUpCommand();\n        break;\n      case StatusKey.Down:\n        e.preventDefault();\n        callDownCommand();\n        break;\n      case StatusKey.Cancel:\n        stopCommand();\n        break;\n    }\n    return e.key;\n  };\n  /*\r\n  *  Смена под директорий.\r\n  */\n  const switchSubDirectory = () => {\n    indexCurrentDirectory++;\n    if (indexCurrentDirectory > consoleData.subDirectory.length - 1) indexCurrentDirectory = 0;\n    const subDirectory = allocateSubDirectory(consoleData.subDirectory[indexCurrentDirectory], consoleData.directory);\n    const valueInput = inputData.valueUser + subDirectory;\n    dispatch({\n      type: ActionKind.ChangeInputValue,\n      valueInput\n    });\n  };\n  /*\r\n  *  Вызов команды из списка команд на уровень ниже.\r\n  */\n  const callDownCommand = () => {\n    indexCurrentHistory++;\n    if (indexCurrentHistory > consoleData.history.length - 1) indexCurrentHistory = 0;\n    const valueInput = consoleData.history[indexCurrentHistory].textCommand;\n    dispatch({\n      type: ActionKind.ChangeInputValue,\n      valueInput\n    });\n  };\n  /*\r\n  *  Вызов команды из списка команд на уровень выше.\r\n  */\n  const callUpCommand = () => {\n    indexCurrentHistory--;\n    if (indexCurrentHistory < 0) indexCurrentHistory = consoleData.history.length - 1;\n    const valueInput = consoleData.history[indexCurrentHistory].textCommand;\n    dispatch({\n      type: ActionKind.ChangeInputValue,\n      valueInput\n    });\n  };\n  /*\r\n  *  Проверка на остановку ввода данных пользователем.\r\n  */\n  const checkStopWrite = useCallback(e => {\n    if (e.key === StatusKey.Cancel) return e.key;\n    return outputData.isDisabledWrite ? e.key = '' : e.key;\n  }, [outputData.isDisabledWrite]);\n  /*\r\n  *  Обработчик нажатий на клавиатуру для изменения ввходных данных в редюсере.\r\n  */\n  const changeHandler = useCallback(e => {\n    if (outputData.isDisabledWrite) return;\n    dispatch({\n      type: ActionKind.ChangeAllData,\n      valueInput: e.currentTarget.value,\n      valueUser: e.currentTarget.value\n    });\n  }, [outputData.isDisabledWrite]);\n\n  /*\r\n  *  Автоматический листание в низ при выводе в Output эелемент.\r\n  */\n  const scrollAuto = e => {\n    e === null || e === void 0 ? void 0 : e.scrollIntoView(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: outputData.output.map((element, i) => {\n        return element.status === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: element.line\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 51\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: element.line\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 105\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: replaceToOneSeparation(consoleData.directory)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: scrollAuto,\n        value: inputData.valueInput,\n        onKeyDown: eventHandler,\n        onChange: changeHandler,\n        className: \"inputConsole\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 12\n  }, this);\n};\n_s(View, \"cy0ZhSbEdtRcALJAqIMBPT1EFEQ=\");\n_c = View;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["React","useCallback","useReducer","useContext","allocateSubDirectory","replaceToOneSeparation","DataConsoleContext","ViewReducer","ActionKind","StatusKey","indexCurrentDirectory","indexCurrentHistory","View","inputData","dispatch","valueInput","valueUser","currentSubDirectory","outputData","consoleData","sendCommand","stopCommand","eventHandler","e","checkStopWrite","key","SendCommand","type","Clear","SwitchSubDirectory","preventDefault","switchSubDirectory","Up","callUpCommand","Down","callDownCommand","Cancel","subDirectory","length","directory","ChangeInputValue","history","textCommand","isDisabledWrite","changeHandler","ChangeAllData","currentTarget","value","scrollAuto","scrollIntoView","output","map","element","i","status","line"],"sources":["C:/Project/ASP.Net/TestGit/webshell_front/src/Console/View/View.tsx"],"sourcesContent":["import React,{ KeyboardEvent, FC, Key, FormEvent, useCallback, useReducer, useContext } from 'react'\r\nimport { allocateSubDirectory,replaceToOneSeparation } from './Function/DirectoryProcessing'\r\nimport { DataConsoleContext } from '../../Context/ConsoleContext'\r\nimport { ViewReducer } from './Reducers/ViewReducer'\r\nimport { ActionKind,  } from './Enum/ActionKind'\r\nimport { StatusKey } from './Enum/StatusKey'\r\n\r\nlet indexCurrentDirectory = 0\r\nlet indexCurrentHistory = 0\r\n/*\r\n *  Функциональный компонент отображающий ввод данных.\r\n */\r\nexport const View : FC = () => {\r\n    //Хранение данных Введенных пользователем.\r\n    const [inputData,dispatch] = useReducer(ViewReducer,{valueInput: '', valueUser:'', currentSubDirectory: ''})\r\n    //Данные для с выводом данных элемента Output.\r\n    const { outputData, consoleData, sendCommand, stopCommand } = useContext(DataConsoleContext)\r\n    \r\n   /*\r\n    *  Функция для обработки нажатия горячих клавишь.\r\n    */\r\n    const eventHandler = (e: KeyboardEvent): Key => {\r\n        checkStopWrite(e)\r\n\r\n        switch (e.key) {\r\n            case StatusKey.SendCommand:\r\n                sendCommand(inputData.valueInput)\r\n                dispatch({type: ActionKind.Clear})\r\n                break\r\n\r\n            case StatusKey.SwitchSubDirectory:\r\n                e.preventDefault()\r\n                switchSubDirectory()\r\n                break\r\n\r\n            case StatusKey.Up:\r\n                e.preventDefault()\r\n                callUpCommand()\r\n                break\r\n\r\n            case StatusKey.Down:\r\n                e.preventDefault()\r\n                callDownCommand()\r\n                break\r\n\r\n            case StatusKey.Cancel:\r\n                stopCommand()\r\n                break\r\n        }\r\n        \r\n        return e.key\r\n    }\r\n    /*\r\n    *  Смена под директорий.\r\n    */\r\n    const switchSubDirectory = () : void => {\r\n        indexCurrentDirectory++\r\n        if (indexCurrentDirectory > consoleData.subDirectory.length - 1) \r\n            indexCurrentDirectory = 0\r\n        \r\n        const subDirectory = allocateSubDirectory(consoleData.subDirectory[indexCurrentDirectory],consoleData.directory);\r\n        const valueInput = inputData.valueUser + subDirectory;\r\n        dispatch({ type: ActionKind.ChangeInputValue,valueInput})\r\n    }\r\n    /*\r\n    *  Вызов команды из списка команд на уровень ниже.\r\n    */\r\n    const callDownCommand = () : void => {\r\n        indexCurrentHistory++\r\n        if (indexCurrentHistory > consoleData.history.length - 1) \r\n            indexCurrentHistory = 0\r\n        \r\n        const valueInput = consoleData.history[indexCurrentHistory].textCommand\r\n        dispatch({ type: ActionKind.ChangeInputValue, valueInput})\r\n    }\r\n    /*\r\n    *  Вызов команды из списка команд на уровень выше.\r\n    */\r\n    const callUpCommand = () : void => {\r\n        indexCurrentHistory--;\r\n        if (indexCurrentHistory < 0) \r\n            indexCurrentHistory =  consoleData.history.length - 1;\r\n\r\n        const valueInput = consoleData.history[indexCurrentHistory].textCommand\r\n        dispatch({ type: ActionKind.ChangeInputValue, valueInput})\r\n    }\r\n    /*\r\n    *  Проверка на остановку ввода данных пользователем.\r\n    */\r\n    const checkStopWrite = useCallback((e: KeyboardEvent) : string => {\r\n        if(e.key === StatusKey.Cancel)\r\n            return e.key\r\n        \r\n        return outputData.isDisabledWrite ? e.key = '' : e.key\r\n    },[outputData.isDisabledWrite])\r\n    /*\r\n    *  Обработчик нажатий на клавиатуру для изменения ввходных данных в редюсере.\r\n    */\r\n    const changeHandler = useCallback((e : FormEvent<HTMLInputElement>) : void => {\r\n        if(outputData.isDisabledWrite)\r\n            return;\r\n\r\n        dispatch({ type: ActionKind.ChangeAllData, valueInput: e.currentTarget.value,valueUser:e.currentTarget.value })\r\n    },[outputData.isDisabledWrite])\r\n    \r\n    /*\r\n    *  Автоматический листание в низ при выводе в Output эелемент.\r\n    */\r\n    const scrollAuto = (e : HTMLInputElement) : void => {\r\n        e?.scrollIntoView(false)\r\n    }\r\n\r\n    return <div>\r\n        <div className='output'>\r\n                {outputData.output.map((element,i) => {\r\n                    return element.status === 1 ? <div key={i} className='error'>{element.line}</div> : <div key={i}>{element.line}</div>\r\n                })}\r\n        </div>\r\n        <div className='inputElement'>\r\n                <div>{replaceToOneSeparation(consoleData.directory)}</div>\r\n                <input ref ={scrollAuto} value = {inputData.valueInput} onKeyDown = {eventHandler} onChange = {changeHandler} className='inputConsole'/>\r\n        </div> \r\n    </div>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}