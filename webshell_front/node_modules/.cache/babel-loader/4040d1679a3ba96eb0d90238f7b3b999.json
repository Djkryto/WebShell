{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ASP.Net\\\\WebShell_2\\\\TaskDNS\\\\ClientApp\\\\src\\\\Page\\\\Console.tsx\",\n  _s = $RefreshSig$();\n// @ts-nocheck\nimport { serverSignalR } from '../Server/WebSoket(SignalR)/SignalR';\nimport { dataServer } from '../Server/Command/Repository';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Input } from '../Input/Input';\nimport { Output } from '../Output/Output';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Console = () => {\n  _s();\n  const [output, setOutput] = useState([]);\n  const [isDisabledWrite, setIsDisabledWrite] = useState(false);\n  const [consoleData, setConsoleData] = useState({\n    directory: '',\n    history: [],\n    subDirectory: []\n  });\n  useEffect(() => {\n    const start = async () => {\n      serverSignalR.connectionToHubAsync();\n      serverSignalR.sendCommand(changeOutput);\n      await getConsoleDataAsync();\n    };\n    start();\n  }, []);\n  const sendCommand = async text => {\n    dataServer.postCommandAsync(text.trim());\n    await getConsoleDataAsync();\n  };\n  const stopCommand = useCallback(async () => {\n    await dataServer.stopCommandAsync();\n  }, []);\n  const changeOutput = dataHub => {\n    const line = dataHub.output;\n    const status = dataHub.status;\n    if (line !== '') {\n      setIsDisabledWrite(status === 0 ? true : false);\n      setOutput(output => [...output, {\n        status,\n        line\n      }]);\n    }\n  };\n  const getConsoleDataAsync = async () => {\n    const currnetDirectory = await dataServer.currnetDirectoryAsync();\n    const subDirectory = await dataServer.subDirectoriesAsync();\n    const history = await dataServer.getHistoryAsync();\n    setConsoleData({\n      directory: currnetDirectory.replaceAll('\"', ''),\n      subDirectory,\n      history\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console\",\n    children: [/*#__PURE__*/_jsxDEV(Output, {\n      output: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      isDisabledWrite: isDisabledWrite,\n      sendCommand: sendCommand,\n      stopCommand: stopCommand,\n      serverDirectory: consoleData.directory,\n      subDirectory: consoleData.subDirectory,\n      history: consoleData.history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Console, \"ONDGDAgR6np2KQGPkLXTYG2JkN0=\");\n_c = Console;\nvar _c;\n$RefreshReg$(_c, \"Console\");","map":{"version":3,"names":["serverSignalR","dataServer","useCallback","useEffect","useState","Input","Output","Console","output","setOutput","isDisabledWrite","setIsDisabledWrite","consoleData","setConsoleData","directory","history","subDirectory","start","connectionToHubAsync","sendCommand","changeOutput","getConsoleDataAsync","text","postCommandAsync","trim","stopCommand","stopCommandAsync","dataHub","line","status","currnetDirectory","currnetDirectoryAsync","subDirectoriesAsync","getHistoryAsync","replaceAll"],"sources":["C:/Project/ASP.Net/WebShell_2/TaskDNS/ClientApp/src/Page/Console.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport { serverSignalR } from '../Server/WebSoket(SignalR)/SignalR'\r\nimport { dataServer } from '../Server/Command/Repository'\r\nimport { IWriteOutput} from '../Output/Interface/IWriteOutput'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { Input } from '../Input/Input'\r\nimport { Output } from '../Output/Output'\r\nimport { IConsoleData } from '../Output/Interface/IConsoleData'\r\n\r\nexport const Console = () =>{\r\n    const [output, setOutput] = useState<IWriteOutput>([])\r\n    const [isDisabledWrite, setIsDisabledWrite] = useState(false)\r\n    const [consoleData, setConsoleData] = useState<IConsoleData>({\r\n        directory: '',\r\n        history: [],\r\n        subDirectory: []\r\n    })\r\n    \r\n    useEffect(() => {\r\n        const start = async () : Promise<void> =>{\r\n            serverSignalR.connectionToHubAsync()\r\n            serverSignalR.sendCommand(changeOutput)\r\n            await getConsoleDataAsync()\r\n        }\r\n        \r\n        start()\r\n    }, [])\r\n\r\n    const sendCommand = async (text : string): Promise<void> => {\r\n        dataServer.postCommandAsync(text.trim())\r\n        await getConsoleDataAsync()\r\n    }\r\n\r\n    const stopCommand = useCallback(async () : Promise<void> => {\r\n        await dataServer.stopCommandAsync()\r\n    },[])\r\n\r\n    const changeOutput = (dataHub) : void => {\r\n        const line = dataHub.output as string\r\n        const status = dataHub.status as number\r\n        \r\n        if(line !== ''){\r\n            setIsDisabledWrite(status === 0? true : false)\r\n            setOutput((output) => [...output,{status ,line}])\r\n        }\r\n    }\r\n\r\n    const getConsoleDataAsync = async () : Promise<void> => {\r\n        const currnetDirectory = await dataServer.currnetDirectoryAsync()\r\n        const subDirectory = await dataServer.subDirectoriesAsync()\r\n        const history = await dataServer.getHistoryAsync()\r\n            \r\n        setConsoleData({\r\n            directory: currnetDirectory.replaceAll('\"', ''),\r\n            subDirectory,\r\n            history\r\n        })\r\n    }\r\n\r\n    return(\r\n    <div className='console'>\r\n        <Output output = {output}/>\r\n        <Input \r\n        isDisabledWrite={isDisabledWrite} \r\n        sendCommand = {sendCommand}\r\n        stopCommand = {stopCommand}\r\n        serverDirectory={consoleData.directory}  \r\n        subDirectory={consoleData.subDirectory}\r\n        history = {consoleData.history}\r\n        />\r\n    </div>\r\n    )\r\n}"],"mappings":";;AAAA;AACA,SAASA,aAAa,QAAQ,qCAAqC;AACnE,SAASC,UAAU,QAAQ,8BAA8B;AAEzD,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,MAAM,QAAQ,kBAAkB;AAAA;AAGzC,OAAO,MAAMC,OAAO,GAAG,MAAK;EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAe,EAAE,CAAC;EACtD,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAe;IACzDU,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAClB,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACZ,MAAMc,KAAK,GAAG,YAA2B;MACrCjB,aAAa,CAACkB,oBAAoB,EAAE;MACpClB,aAAa,CAACmB,WAAW,CAACC,YAAY,CAAC;MACvC,MAAMC,mBAAmB,EAAE;IAC/B,CAAC;IAEDJ,KAAK,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,WAAW,GAAG,MAAOG,IAAa,IAAoB;IACxDrB,UAAU,CAACsB,gBAAgB,CAACD,IAAI,CAACE,IAAI,EAAE,CAAC;IACxC,MAAMH,mBAAmB,EAAE;EAC/B,CAAC;EAED,MAAMI,WAAW,GAAGvB,WAAW,CAAC,YAA4B;IACxD,MAAMD,UAAU,CAACyB,gBAAgB,EAAE;EACvC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMN,YAAY,GAAIO,OAAO,IAAY;IACrC,MAAMC,IAAI,GAAGD,OAAO,CAACnB,MAAgB;IACrC,MAAMqB,MAAM,GAAGF,OAAO,CAACE,MAAgB;IAEvC,IAAGD,IAAI,KAAK,EAAE,EAAC;MACXjB,kBAAkB,CAACkB,MAAM,KAAK,CAAC,GAAE,IAAI,GAAG,KAAK,CAAC;MAC9CpB,SAAS,CAAED,MAAM,IAAK,CAAC,GAAGA,MAAM,EAAC;QAACqB,MAAM;QAAED;MAAI,CAAC,CAAC,CAAC;IACrD;EACJ,CAAC;EAED,MAAMP,mBAAmB,GAAG,YAA4B;IACpD,MAAMS,gBAAgB,GAAG,MAAM7B,UAAU,CAAC8B,qBAAqB,EAAE;IACjE,MAAMf,YAAY,GAAG,MAAMf,UAAU,CAAC+B,mBAAmB,EAAE;IAC3D,MAAMjB,OAAO,GAAG,MAAMd,UAAU,CAACgC,eAAe,EAAE;IAElDpB,cAAc,CAAC;MACXC,SAAS,EAAEgB,gBAAgB,CAACI,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;MAC/ClB,YAAY;MACZD;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACA;IAAK,SAAS,EAAC,SAAS;IAAA,wBACpB,QAAC,MAAM;MAAC,MAAM,EAAIP;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eAC3B,QAAC,KAAK;MACN,eAAe,EAAEE,eAAgB;MACjC,WAAW,EAAIS,WAAY;MAC3B,WAAW,EAAIM,WAAY;MAC3B,eAAe,EAAEb,WAAW,CAACE,SAAU;MACvC,YAAY,EAAEF,WAAW,CAACI,YAAa;MACvC,OAAO,EAAIJ,WAAW,CAACG;IAAQ;MAAA;MAAA;MAAA;IAAA,QAC7B;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEV,CAAC;AAAA,GA/DYR,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}